var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.482,1,2.016]],["body/controllers/AppController.html",[0,2.5,1,2.834,2,1.564,3,0.456,4,0.456,5,0.305,6,2.775,7,1.394,8,4.158,9,0.456,10,1.334,11,2.137,12,5.335,13,1.564,14,0.035,15,3.338,16,3.204,17,5.335,18,3.842,19,2.775,20,3.204,21,3.204,22,0.695,23,3.338,24,1.6,25,4.435,26,3.842,27,2.084,28,0.759,29,0.764,30,3.698,31,3.603,32,1.564,33,2.775,34,1.193,35,1.193,36,2.866,37,2.775,38,2.834,39,3.338,40,0.456,41,0.132,42,1.304,43,1.564,44,1.722,45,2.127,46,1.564,47,1.093,48,2.834,49,2.404,50,0.916,51,3.338,52,0.024,53,0.024]],["title/modules/AppModule.html",[54,1.236,55,2.016]],["body/modules/AppModule.html",[1,2.625,2,1.621,3,0.563,4,0.319,5,0.316,14,0.035,28,0.81,29,0.535,36,2.626,37,1.942,40,0.319,41,0.092,44,2.349,47,0.765,50,0.95,52,0.019,53,0.019,54,1.351,55,3.678,56,1.095,57,1.478,58,1.942,59,1.942,60,1.942,61,2.907,62,2.907,63,2.907,64,1.975,65,1.334,66,1.095,67,2.337,68,2.205,69,3.502,70,2.337,71,1.942,72,3.786,73,3.521,74,1.334,75,1.683,76,3.46,77,1.205,78,2.337,79,1.942,80,1.942,81,3.425,82,2.337,83,2.625,84,2.902,85,2.337,86,2.337,87,3.46,88,1.942,89,1.942,90,2.337,91,2.337,92,2.337,93,2.337,94,2.337,95,2.337,96,2.337,97,1.942,98,2.337,99,2.492,100,2.337,101,1.942,102,3.46,103,1.942,104,2.337,105,1.942,106,2.337,107,2.967,108,3.425,109,1.942,110,2.337,111,2.337,112,2.337,113,1.683,114,2.337,115,2.337,116,2.337,117,2.337,118,2.125,119,2.337,120,2.337,121,2.876,122,2.337,123,2.337,124,2.337,125,1.942,126,4.12,127,4.555,128,3.46,129,3.46,130,2.876,131,3.46,132,1.946,133,3.46,134,3.46,135,2.337,136,3.46,137,2.337,138,2.337,139,2.337,140,2.337,141,2.337,142,2.337,143,2.337,144,2.337,145,2.337,146,2.337,147,2.337,148,2.337,149,2.337]],["title/injectables/AppService.html",[36,1.632,150,0.794]],["body/injectables/AppService.html",[3,0.464,4,0.464,5,0.311,7,1.13,9,0.464,10,1.35,14,0.035,22,0.937,24,1.611,25,4.647,26,4.026,28,0.734,29,0.778,33,4.196,34,1.215,35,1.215,36,2.322,40,0.464,41,0.134,42,2.098,43,1.593,44,2.772,46,1.593,47,1.113,50,0.933,52,0.024,53,0.024,83,2.166,84,2.869,107,2.449,150,1.13,151,1.593,152,2.826,153,3.743,154,5.373,155,3.4,156,5.949,157,3.4,158,1.113,159,0.642,160,0.52,161,1.02,162,3.743,163,3.4,164,3.4,165,3.4,166,1.754,167,3.4,168,3.4,169,3.4,170,2.449,171,3.4,172,2.826,173,2.166]],["title/controllers/AuthController.html",[0,1.482,174,2.016]],["body/controllers/AuthController.html",[0,1.975,2,1.138,3,0.332,4,0.332,5,0.222,7,1.498,9,0.332,10,1.068,11,2.206,13,1.668,14,0.035,18,2.564,19,2.959,20,3.342,22,0.741,24,1.068,27,1.668,28,0.747,29,0.556,31,3.842,32,1.138,34,0.868,35,0.868,38,2.685,40,0.332,41,0.096,42,1.39,43,2.174,44,1.836,46,1.668,48,3.29,49,2.564,50,0.977,52,0.019,53,0.019,158,1.166,159,0.672,160,0.545,161,1.068,166,1.836,174,2.268,175,2.019,176,2.019,177,2.429,178,3.558,179,3.94,180,3.858,181,2.429,182,2.821,183,2.429,184,4.64,185,4.64,186,3.56,187,4.64,188,4.64,189,2.429,190,4.64,191,2.959,192,2.564,193,2.959,194,2.268,195,2.948,196,2.957,197,2.429,198,2.821,199,2.429,200,4.64,201,2.429,202,2.429,203,1.749,204,2.429,205,2.019,206,2.019,207,1.659,208,1.548,209,2.548,210,2.019,211,2.019,212,2.429,213,2.019,214,2.429,215,2.429,216,2.019,217,2.429,218,2.429,219,2.429,220,1.39,221,0.741,222,2.268,223,2.429,224,3.56,225,2.429,226,2.429,227,2.429]],["title/modules/AuthModule.html",[54,1.236,61,1.806]],["body/modules/AuthModule.html",[2,1.953,3,0.414,4,0.414,5,0.277,11,1.296,14,0.035,28,0.813,29,0.694,40,0.414,41,0.12,50,0.832,52,0.022,53,0.022,54,1.628,56,1.421,57,1.781,61,3.459,64,2.38,65,1.732,66,1.421,68,2.656,69,3.002,72,3.959,73,3.268,74,1.732,75,2.184,77,1.564,107,2.184,108,2.521,159,0.573,174,3.035,207,1.986,208,1.933,209,3.125,210,2.521,221,0.632,228,2.521,229,2.521,230,2.521,231,3.459,232,3.033,233,3.465,234,3.033,235,2.184,236,3.033,237,1.933,238,2.38,239,1.564,240,3.033,241,3.033,242,2.521,243,2.521,244,2.184,245,3.033,246,3.033,247,1.732,248,3.033,249,3.033,250,2.521,251,3.033,252,4.168,253,3.033,254,2.184]],["title/injectables/AuthService.html",[150,0.794,209,1.632]],["body/injectables/AuthService.html",[3,0.313,4,0.313,5,0.21,7,0.855,9,0.313,10,1.023,11,2.16,14,0.035,22,0.939,24,1.353,27,2.369,28,0.735,29,0.524,34,0.819,35,0.819,40,0.313,41,0.091,42,1.762,43,2.369,44,2.608,46,2.369,50,0.936,52,0.018,53,0.018,73,3.336,74,1.308,132,0.979,150,0.855,151,1.073,158,1.333,159,0.91,160,0.738,161,1.221,166,2.608,178,2.456,179,1.65,182,2.753,194,2.173,195,2.325,196,1.46,203,2.456,206,1.905,207,1.965,208,1.46,209,1.759,211,1.905,220,0.895,221,1.221,222,1.46,235,1.65,239,1.182,247,2.576,254,2.933,255,1.905,256,1.598,257,4.511,258,4.072,259,4.072,260,2.291,261,5.38,262,3.41,263,2.291,264,2.291,265,2.834,266,2.456,267,3.875,268,3.41,269,2.291,270,2.291,271,3.41,272,2.173,273,2.834,274,2.173,275,3.41,276,2.834,277,3.385,278,2.834,279,2.834,280,4.072,281,3.41,282,2.291,283,1.905,284,1.927,285,2.173,286,1.947,287,2.291,288,2.291,289,2.291,290,2.291,291,3.41,292,1.759,293,2.291,294,1.65,295,1.65,296,1.905,297,2.291]],["title/injectables/CaslFactory.html",[150,0.794,298,1.482]],["body/injectables/CaslFactory.html",[3,0.442,4,0.442,5,0.296,9,0.442,10,1.307,14,0.035,22,0.674,24,0.971,28,0.72,29,0.741,34,1.157,35,1.558,40,0.595,41,0.128,50,0.889,52,0.023,53,0.023,132,1.383,150,1.093,151,1.517,158,1.06,159,0.611,160,0.807,161,0.971,220,1.264,221,1.225,239,1.67,284,1.383,298,2.042,299,2.332,300,4.358,301,4.358,302,3.238,303,2.813,304,4.358,305,4.358,306,4.358,307,3.623,308,2.692,309,2.332,310,2.332,311,3.238,312,4.358,313,3.623,314,3.238,315,3.623,316,3.238,317,3.238,318,3.238,319,3.623,320,1.849,321,3.238,322,2.692,323,4.358,324,3.238,325,2.332,326,2.332,327,3.238,328,4.095,329,3.238,330,4.358,331,4.358,332,3.238,333,3.238,334,3.238,335,3.238,336,3.238,337,3.238,338,1.517,339,2.692,340,3.238,341,3.238,342,3.238]],["title/modules/CaslModule.html",[54,1.236,62,1.806]],["body/modules/CaslModule.html",[3,0.567,4,0.567,5,0.38,14,0.034,28,0.699,29,0.951,40,0.567,41,0.164,52,0.027,53,0.027,54,1.998,56,1.946,57,2.186,62,3.502,64,2.922,65,2.372,66,1.946,68,3.261,233,4.254,298,2.972,343,3.453,344,3.453,345,3.453,346,4.154,347,2.647]],["title/classes/DeleteUserPolicyHandler.html",[41,0.125,348,1.806]],["body/classes/DeleteUserPolicyHandler.html",[3,0.519,4,0.519,5,0.347,9,0.519,10,1.451,14,0.035,22,0.791,24,1.139,28,0.727,34,1.358,35,1.358,40,0.661,41,0.15,50,1.043,52,0.026,53,0.026,158,1.244,159,0.717,160,0.815,161,1.139,221,1.008,239,1.96,303,2.763,309,2.736,320,3.38,338,1.78,347,2.421,348,2.763,349,3.084,350,2.421,351,3.485,352,3.201,353,4.023,354,4.427,355,3.799,356,2.169,357,4.023,358,3.485,359,2.169,360,2.736,361,2.169,362,3.159]],["title/interfaces/IPolicyHandler.html",[352,1.806,356,1.806]],["body/interfaces/IPolicyHandler.html",[3,0.52,4,0.52,5,0.349,9,0.52,10,1.454,14,0.035,22,0.793,24,1.143,28,0.728,34,1.362,35,1.362,40,0.662,41,0.151,50,1.046,52,0.026,53,0.026,158,1.248,159,0.719,160,0.816,161,1.143,221,1.01,239,1.966,303,2.768,309,2.745,320,3.382,347,2.428,348,2.176,349,3.09,350,2.428,351,2.745,352,3.205,353,4.031,354,4.433,356,2.176,357,4.433,358,3.492,359,2.176,360,2.745,361,2.176,362,3.168,363,3.811,364,3.811]],["title/injectables/JwtAuthGuard.html",[150,0.794,365,2.016]],["body/injectables/JwtAuthGuard.html",[3,0.489,4,0.489,5,0.327,7,0.898,9,0.489,10,1.396,14,0.035,22,0.97,24,1.073,28,0.749,29,0.819,40,0.489,41,0.142,42,1.397,45,2.28,50,1.278,52,0.025,53,0.025,118,1.846,150,1.168,151,1.677,158,1.525,159,0.879,160,0.713,161,1.396,178,3.354,213,2.975,220,1.397,237,2.28,247,2.659,365,2.967,366,4.303,367,2.975,368,2.967,369,3.871,370,2.975,371,4.843,372,3.579,373,3.871,374,4.557,375,3.579,376,2.975,377,2.28,378,3.579,379,2.577,380,2.975,381,3.579,382,2.975,383,3.871,384,3.579,385,2.975,386,3.579,387,3.579]],["title/injectables/JwtStrategy.html",[150,0.794,231,1.806]],["body/injectables/JwtStrategy.html",[3,0.414,4,0.414,5,0.277,7,0.761,9,0.414,10,1.25,11,2.035,14,0.035,22,0.868,24,1.25,27,2.232,28,0.759,29,0.694,40,0.414,41,0.188,42,2.003,43,2.232,46,1.953,52,0.022,53,0.022,73,3.693,74,1.732,150,1.046,151,1.421,158,1.365,159,0.787,160,0.638,161,1.25,166,2.15,191,3.959,207,2.072,208,1.933,216,2.521,220,1.184,221,0.632,231,2.38,237,1.933,239,1.564,247,2.928,250,2.521,266,3.002,267,3.872,279,2.521,380,2.521,382,2.521,388,2.521,389,4.763,390,3.033,391,3.033,392,3.033,393,5.128,394,3.033,395,4.168,396,4.168,397,3.465,398,3.002,399,3.033,400,3.033,401,2.521,402,3.033,403,3.033,404,3.033,405,3.033,406,2.521,407,3.033,408,3.033,409,3.033,410,3.033,411,4.168,412,4.168,413,2.184,414,4.168]],["title/classes/LoginDto.html",[41,0.125,182,1.806]],["body/classes/LoginDto.html",[3,0.508,4,0.508,5,0.34,7,0.934,9,0.508,13,2.238,14,0.035,22,0.995,28,0.652,32,1.744,40,0.508,41,0.22,47,1.822,52,0.026,53,0.026,118,2.464,160,0.731,179,3.44,182,2.727,196,3.044,256,2.238,284,2.458,292,2.968,338,1.744,415,3.095,416,3.44,417,3.095,418,3.723,419,4.008,420,2.681,421,3.723,422,3.799,423,3.44,424,3.799,425,2.681,426,2.372,427,3.044,428,2.681]],["title/classes/PatchUserDto.html",[41,0.125,429,1.806]],["body/classes/PatchUserDto.html",[3,0.439,4,0.439,5,0.294,7,0.806,9,0.439,13,2.462,14,0.035,22,1.094,28,0.592,32,1.506,40,0.439,41,0.208,47,1.924,52,0.023,53,0.023,118,1.658,159,1.036,160,0.804,195,2.476,221,0.903,256,2.032,284,2.344,286,3.132,292,2.829,338,1.506,416,2.315,419,4.231,420,2.315,422,3.951,423,3.123,424,4.071,425,2.315,426,2.048,427,2.048,428,2.315,429,2.476,430,4.56,431,2.672,432,3.605,433,3.214,434,3.214,435,3.214,436,3.605,437,3.605,438,3.214,439,3.214,440,3.214,441,3.214,442,3.605,443,2.672,444,2.672]],["title/guards/PoliciesGuard.html",[368,2.016,445,1.806]],["body/guards/PoliciesGuard.html",[3,0.425,4,0.425,5,0.285,9,0.425,10,1.273,11,2.063,14,0.035,22,1.005,24,1.273,27,1.988,28,0.741,29,0.713,40,0.425,41,0.123,42,1.216,45,1.984,50,1.325,52,0.023,53,0.023,150,1.065,158,1.581,159,0.911,160,0.739,161,1.448,166,2.674,220,1.885,221,0.648,298,2.685,303,3.098,320,2.96,347,1.984,351,2.242,359,2.96,360,2.242,361,1.778,369,4.31,370,2.588,371,4.654,373,3.528,374,4.31,376,2.588,377,1.984,385,2.588,445,2.423,446,3.113,447,2.588,448,4.244,449,3.113,450,3.113,451,4.244,452,3.113,453,4.244,454,3.056,455,3.113,456,2.588,457,3.113,458,3.113,459,3.113,460,3.113,461,3.113,462,3.113,463,3.113,464,2.242,465,3.113,466,3.113]],["title/classes/RegisterDto.html",[41,0.125,198,1.806]],["body/classes/RegisterDto.html",[3,0.433,4,0.433,5,0.29,7,0.796,9,0.433,13,2.449,14,0.035,22,1.088,28,0.587,32,1.487,40,0.433,41,0.207,47,1.918,52,0.023,53,0.023,118,2.696,159,1.031,160,0.8,180,3.575,196,2.74,198,2.455,256,2.015,284,2.334,286,3.119,292,2.818,338,1.487,416,3.764,417,2.639,419,4.219,420,2.286,422,3.934,423,3.097,424,4.056,425,2.286,426,2.023,427,3.331,428,2.286,436,3.575,437,3.575,442,3.575,443,2.639,444,2.639,467,2.639,468,3.174,469,3.174,470,3.174,471,3.174,472,3.174,473,3.174]],["title/classes/User.html",[41,0.125,221,0.659]],["body/classes/User.html",[3,0.395,4,0.395,5,0.264,7,0.725,9,0.395,13,2.564,14,0.035,22,1.14,28,0.634,34,1.033,35,1.033,40,0.634,41,0.184,47,1.93,52,0.022,53,0.022,77,1.491,159,0.998,160,0.86,220,1.129,221,1.1,238,1.65,244,3.618,256,1.889,284,2.257,285,3.367,286,3.017,292,2.725,310,3.344,338,1.354,474,1.842,475,4.045,476,5.956,477,2.89,478,6.009,479,2.89,480,3.352,481,2.89,482,2.89,483,2.89,484,2.89,485,4.032,486,3.352,487,4.032,488,4.032,489,4.032,490,2.89,491,2.89,492,4.032,493,2.082,494,2.082,495,2.89,496,2.403]],["title/controllers/UsersController.html",[0,1.482,497,2.016]],["body/controllers/UsersController.html",[0,1.704,2,0.893,3,0.26,4,0.26,5,0.174,7,1.433,9,0.26,10,0.889,11,2.229,13,1.922,14,0.035,16,3.389,18,4.026,20,3.389,21,3.389,22,0.854,24,1.523,27,2.498,28,0.712,29,0.436,30,2.464,31,3.537,32,0.893,34,0.681,35,0.681,40,0.26,41,0.075,42,0.744,43,2.082,45,1.215,46,0.893,47,1.608,48,2.998,50,1.126,52,0.016,53,0.016,132,0.814,158,1.343,159,0.775,160,0.557,161,1.23,176,1.584,194,1.889,195,2.077,203,1.373,205,1.584,207,1.467,220,0.744,221,1.295,222,1.215,272,1.889,274,1.889,284,2.32,294,1.373,322,1.584,348,1.692,361,1.088,429,2.343,432,3.912,445,1.088,456,1.584,497,1.889,498,1.584,499,1.906,500,3.637,501,2.964,502,2.964,503,2.964,504,1.906,505,1.906,506,1.906,507,3.695,508,3.637,509,1.906,510,2.964,511,2.964,512,2.464,513,1.906,514,2.964,515,1.906,516,4.103,517,2.464,518,2.964,519,2.464,520,3.411,521,3.912,522,1.906,523,1.906,524,4.705,525,1.906,526,2.464,527,2.135,528,1.906,529,1.906,530,1.906,531,2.464,532,2.464,533,2.464,534,1.906,535,1.584,536,1.373,537,1.906,538,1.584,539,1.906,540,1.584,541,1.584,542,1.373,543,1.584,544,1.906,545,1.906,546,1.906,547,1.906,548,3.637,549,1.906,550,1.906,551,1.584,552,1.584,553,1.906,554,1.906,555,1.906,556,1.906,557,1.906,558,1.906,559,1.906]],["title/modules/UsersModule.html",[54,1.236,63,1.806]],["body/modules/UsersModule.html",[2,2.158,3,0.481,4,0.481,5,0.322,14,0.035,28,0.828,29,0.806,40,0.481,41,0.139,52,0.025,53,0.025,54,1.799,56,1.649,57,1.968,63,3.422,64,2.63,65,2.01,66,1.649,68,2.935,69,2.535,75,2.535,77,1.816,159,0.665,207,2.073,221,0.733,238,2.63,242,2.926,243,2.926,244,2.535,298,2.718,365,2.935,377,2.243,445,2.63,497,3.272,538,2.926,542,2.535,543,2.926,560,3.52,561,3.52,562,3.52,563,4.606,564,3.52,565,3.52,566,3.52,567,3.52,568,3.52,569,3.52]],["title/injectables/UsersService.html",[150,0.794,207,1.131]],["body/injectables/UsersService.html",[3,0.224,4,0.224,5,0.15,7,0.66,9,0.224,10,0.789,11,2.123,14,0.035,16,1.18,21,1.18,22,0.965,24,1.591,26,1.18,27,2.667,28,0.679,29,0.375,34,0.585,35,0.585,40,0.224,41,0.065,42,1.473,43,2.257,44,1.356,46,0.767,47,1.831,49,1.894,50,1.272,52,0.014,53,0.014,77,0.845,132,1.611,150,0.66,151,0.767,158,1.517,159,0.909,160,0.709,161,1.389,166,0.845,192,2.716,194,1.676,195,2.837,198,2.358,207,0.94,220,1.473,221,1.259,222,1.676,254,2.716,272,1.676,273,1.362,274,2.403,284,2.498,285,1.044,292,2.484,294,2.372,295,1.894,296,1.362,310,1.18,325,1.18,326,1.18,413,1.894,429,2.358,475,1.18,480,1.362,486,1.362,493,1.18,494,1.18,507,3.851,512,1.362,520,3.665,521,4.411,527,1.894,531,3.135,532,2.186,533,2.738,535,1.362,540,1.362,541,1.362,542,1.18,552,2.186,570,1.362,571,2.629,572,2.629,573,1.638,574,4.129,575,1.638,576,3.294,577,2.629,578,1.638,579,2.629,580,2.738,581,2.629,582,1.638,583,2.629,584,2.629,585,1.638,586,2.629,587,1.638,588,4.409,589,2.629,590,2.629,591,1.638,592,2.629,593,1.638,594,2.629,595,2.629,596,1.638,597,2.629,598,1.638,599,1.638,600,1.638,601,1.638,602,2.186,603,2.629,604,1.638,605,2.629,606,1.638,607,1.638,608,1.638,609,1.362,610,1.638,611,1.638,612,2.629,613,1.638,614,1.638,615,1.638,616,1.638,617,1.638,618,1.638,619,1.638,620,1.638,621,1.638,622,1.638,623,1.638,624,1.638,625,1.638,626,1.362,627,1.638,628,1.638,629,1.638,630,1.638,631,1.638,632,1.894,633,1.638,634,1.638,635,1.638,636,1.638,637,1.638,638,1.638,639,1.638]],["title/coverage.html",[640,3.567]],["body/coverage.html",[0,2.145,1,1.794,5,0.257,6,2.34,14,0.034,36,1.452,38,1.794,41,0.207,52,0.021,53,0.021,132,1.203,150,1.361,152,2.34,160,0.431,173,1.794,174,1.794,175,2.34,182,1.607,198,1.607,207,1.006,209,1.452,221,0.824,231,1.607,238,1.607,255,2.34,298,1.319,299,2.027,348,1.607,349,2.522,350,2.522,352,1.607,356,1.607,365,1.794,366,2.34,367,2.34,368,1.794,379,2.027,388,2.34,415,2.34,429,1.607,430,2.34,431,2.34,445,1.607,447,2.34,454,2.027,464,2.027,467,2.34,474,2.522,497,1.794,498,2.34,536,2.027,570,2.34,640,2.34,641,2.815,642,2.815,643,6.106,644,2.815,645,4.966,646,2.34,647,5.046,648,2.34,649,6.106,650,5.926,651,3.29,652,2.34,653,4.966,654,2.815,655,2.815,656,3.29,657,4.577,658,3.29,659,3.29,660,2.815,661,2.34,662,2.85,663,2.34,664,3.768,665,2.34,666,2.34,667,4.966,668,2.34,669,2.34,670,2.34,671,2.815,672,2.815,673,2.815,674,2.34]],["title/dependencies.html",[57,1.622,675,2.208]],["body/dependencies.html",[5,0.31,14,0.035,29,0.776,32,1.589,41,0.178,52,0.024,53,0.024,57,1.449,71,2.819,74,1.936,77,1.749,79,2.819,80,2.819,81,2.819,83,2.161,84,3.213,88,2.819,89,2.819,235,2.442,237,2.161,247,1.936,308,2.819,377,2.161,401,2.819,426,2.161,475,2.442,493,2.442,676,3.391,677,5.946,678,3.391,679,3.391,680,3.391,681,3.391,682,4.494,683,3.736,684,3.391,685,3.391,686,3.391,687,3.391,688,3.391,689,3.391,690,3.391,691,3.391,692,3.391,693,3.391,694,3.391,695,5.74,696,3.391,697,3.391,698,2.819,699,3.391,700,3.391,701,3.391,702,3.391,703,3.391,704,3.391,705,3.391,706,3.391,707,3.391,708,3.391,709,3.391,710,3.391,711,3.391,712,3.391,713,3.391,714,3.391,715,3.391,716,3.391,717,3.391,718,3.391,719,3.391,720,3.391,721,3.391]],["title/miscellaneous/functions.html",[722,1.37,723,3.157]],["body/miscellaneous/functions.html",[9,0.663,14,0.03,52,0.03,53,0.03,664,3.497,665,4.928,722,2.505,723,4.037,724,4.037]],["title/index.html",[9,0.363,725,2.208,726,1.913]],["body/index.html",[5,0.233,7,0.638,8,3.362,14,0.033,47,0.833,48,1.002,52,0.014,53,0.014,54,1.579,57,1.369,66,1.895,83,2.346,84,1.621,97,1.307,99,2.308,101,1.307,103,1.307,105,1.307,109,1.307,113,3.117,125,2.664,130,1.307,132,0.672,153,2.664,160,0.241,161,0.471,162,2.664,170,3.707,173,1.621,192,1.832,193,1.307,265,1.307,266,1.832,267,1.132,274,2.042,276,1.307,277,2.115,278,1.307,283,2.115,295,2.912,315,3.597,328,1.307,339,1.307,397,2.115,398,1.132,427,2.346,519,1.307,551,3.061,580,2.664,602,1.307,626,1.307,647,2.115,662,2.912,674,1.307,698,2.115,726,1.832,727,2.544,728,1.572,729,2.544,730,3.204,731,1.572,732,1.572,733,1.572,734,1.572,735,1.572,736,2.544,737,1.572,738,1.572,739,3.204,740,1.572,741,2.544,742,4.044,743,4.044,744,3.204,745,4.327,746,2.544,747,3.204,748,2.544,749,2.544,750,3.204,751,1.572,752,4.555,753,1.572,754,3.204,755,1.572,756,1.572,757,4.555,758,1.572,759,1.572,760,1.572,761,1.572,762,3.682,763,2.544,764,5.411,765,3.682,766,3.682,767,1.572,768,3.204,769,1.572,770,1.572,771,1.572,772,4.555,773,2.544,774,2.544,775,2.544,776,4.555,777,2.664,778,1.572,779,1.572,780,1.572,781,1.572,782,1.572,783,2.544,784,1.572,785,1.572,786,1.572,787,1.307,788,1.572,789,1.572,790,1.572,791,1.572,792,1.572,793,1.572,794,2.544,795,1.572,796,1.572,797,1.572,798,1.572,799,1.572,800,1.307,801,2.544,802,1.572,803,1.572,804,3.204,805,2.544,806,4.743,807,1.572,808,3.204,809,1.572,810,1.572,811,3.204,812,1.572,813,1.572,814,1.572,815,1.572,816,4.9,817,2.544,818,1.572,819,4.743,820,1.572,821,1.572,822,1.572,823,1.572,824,1.572,825,1.572,826,1.572,827,1.572,828,1.572,829,1.572,830,1.572,831,1.572,832,1.572,833,1.572,834,1.572,835,2.544,836,4.327,837,1.572,838,3.682,839,1.572,840,1.572,841,2.544,842,1.572,843,1.572,844,1.572,845,1.572,846,1.572,847,1.572,848,1.572,849,2.115,850,1.572,851,2.544,852,1.572,853,1.572,854,1.572,855,1.572,856,1.572,857,2.544,858,1.572,859,1.572,860,1.572,861,1.572,862,1.572,863,1.572,864,1.572,865,3.204,866,2.664,867,1.572,868,1.572,869,1.572,870,1.572,871,2.544,872,2.544,873,1.572,874,1.572,875,1.572,876,1.572,877,1.572,878,1.572,879,1.572,880,2.115,881,1.572,882,2.544,883,3.682,884,1.572,885,1.572,886,1.572,887,3.204,888,3.204,889,2.544,890,1.572,891,1.572,892,1.572,893,1.572,894,1.572,895,1.572,896,1.572,897,1.572,898,1.572,899,1.572,900,1.572,901,1.572,902,1.572,903,1.572,904,1.572,905,1.572,906,3.204,907,2.544,908,1.572,909,3.204,910,2.544,911,2.544,912,2.544,913,2.544,914,1.572,915,2.544,916,2.544,917,2.115,918,2.544,919,2.544,920,1.572,921,1.572,922,1.572,923,2.115,924,2.544,925,1.572,926,1.572,927,1.572,928,1.572,929,1.572,930,1.572,931,1.572,932,1.572,933,1.572,934,1.572,935,1.572,936,1.572,937,1.572,938,1.572,939,1.572,940,1.572,941,1.572,942,1.572,943,1.572,944,1.572,945,1.572,946,1.572,947,1.572,948,1.572,949,1.572,950,1.572,951,1.572,952,1.572,953,1.572,954,1.307,955,1.572,956,1.572,957,1.572,958,1.572,959,1.572,960,1.572,961,1.572,962,1.002,963,1.132,964,1.572,965,1.572]],["title/license.html",[725,2.208,726,1.913,962,1.692]],["body/license.html",[14,0.025,52,0.025,53,0.025,66,1.725,121,3.06,173,2.345,272,2.345,319,3.06,526,3.06,609,3.06,777,3.06,787,3.06,800,4.361,866,3.06,880,3.942,917,3.06,962,2.345,963,3.415,966,5.246,967,3.68,968,3.68,969,3.68,970,4.742,971,3.68,972,3.68,973,3.68,974,3.68,975,3.68,976,4.742,977,6.112,978,3.68,979,3.68,980,3.68,981,4.742,982,3.68,983,3.68,984,3.68,985,3.68,986,3.68,987,3.68,988,3.68,989,3.68,990,3.68,991,4.742,992,3.68,993,3.68,994,3.68,995,3.68,996,3.68,997,4.742,998,4.742,999,3.68,1000,3.68,1001,3.68,1002,3.68,1003,3.68,1004,3.68,1005,3.68,1006,3.68,1007,3.68,1008,3.68,1009,3.68,1010,3.68,1011,3.68,1012,3.68,1013,3.68,1014,3.68,1015,3.68,1016,3.68,1017,3.68,1018,3.68,1019,3.68,1020,3.68,1021,3.68,1022,3.68,1023,3.68]],["title/modules.html",[56,2.01]],["body/modules.html",[14,0.029,52,0.029,53,0.029,55,2.95,56,2.169,61,2.643,62,2.643,63,2.643,683,4.991,954,4.991,1024,6.004,1025,6.004]],["title/overview.html",[1026,3.567]],["body/overview.html",[2,1.672,14,0.034,36,2.666,52,0.025,53,0.025,55,3.907,56,1.672,57,1.986,58,2.967,59,2.967,60,2.967,61,3.526,62,3.324,63,3.385,64,2.654,65,2.038,66,1.672,151,1.672,207,1.957,209,3.058,228,2.967,229,2.967,230,2.967,231,3.385,298,2.817,338,1.672,343,2.967,344,2.967,345,2.967,356,2.038,368,2.274,632,3.348,1026,2.967,1027,3.569,1028,3.569,1029,3.569,1030,3.569]],["title/properties.html",[256,1.779,675,2.208]],["body/properties.html",[14,0.033,52,0.03,53,0.03,256,2.284,962,3.106,963,3.51,1031,4.052,1032,4.874]],["title/miscellaneous/typealiases.html",[722,1.37,1033,3.798]],["body/miscellaneous/typealiases.html",[9,0.608,14,0.032,52,0.029,53,0.029,160,0.682,299,3.208,303,2.543,307,3.703,313,4.438,320,3.048,349,2.838,350,3.644,352,2.543,358,4.118,359,3.048,464,3.208,474,2.838,494,3.845,722,2.298,1034,4.454,1035,5.339,1036,5.339,1037,3.703]],["title/miscellaneous/variables.html",[722,1.37,1038,3.157]],["body/miscellaneous/variables.html",[7,1.002,9,0.389,14,0.035,38,2.545,47,1.784,52,0.021,53,0.021,99,2.877,113,2.054,118,2.06,132,1.219,159,0.538,160,0.9,170,3.925,172,2.371,221,1.095,238,2.281,285,1.817,286,1.629,325,2.877,326,2.877,359,1.629,361,2.281,379,2.877,383,2.371,398,2.877,406,2.371,413,3.32,454,2.877,474,1.817,496,2.371,517,2.371,527,2.054,536,2.877,632,3.597,646,2.371,648,3.321,651,2.371,652,3.321,656,2.371,658,2.371,659,3.832,661,2.371,662,3.597,663,2.371,664,2.054,666,3.321,668,3.321,669,3.321,670,3.321,722,1.471,724,4.152,849,5.056,923,2.371,1031,2.371,1037,2.371,1038,2.371,1039,3.994,1040,2.852,1041,2.852,1042,3.994,1043,2.852,1044,3.994,1045,6.082,1046,2.852,1047,2.852,1048,2.852,1049,2.852,1050,2.852,1051,2.852,1052,2.852,1053,2.852,1054,2.852,1055,3.994,1056,2.852]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":649,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":1032,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":721,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":650,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":657,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":660,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":632,"title":{},"body":{"injectables/UsersService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.7.0",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["1.8.2",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":667,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":655,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":643,"title":{},"body":{"coverage.html":{}}}],["14.2.0",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["14.6.1",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["14d",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["16",{"_index":767,"title":{},"body":{"index.html":{}}}],["17.6.2",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":696,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":644,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["201",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["2018",{"_index":968,"title":{},"body":{"license.html":{}}}],["20m",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["2400",{"_index":858,"title":{},"body":{"index.html":{}}}],["3",{"_index":1028,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["3.8.2",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":645,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":654,"title":{},"body":{"coverage.html":{}}}],["365",{"_index":897,"title":{},"body":{"index.html":{}}}],["4",{"_index":1027,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["4.7.1",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":859,"title":{},"body":{"index.html":{}}}],["400",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["401",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["404",{"_index":627,"title":{},"body":{"injectables/UsersService.html":{}}}],["5",{"_index":1030,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":653,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1029,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["6.5.0",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["6.6.2",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["7.4.0",{"_index":692,"title":{},"body":{"dependencies.html":{}}}],["7.5.0",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":671,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":672,"title":{},"body":{"coverage.html":{}}}],["9.0.0",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["ability",{"_index":303,"title":{},"body":{"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"miscellaneous/typealiases.html":{}}}],["ability.can(useractionsenum.delete",{"_index":362,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{}}}],["abilitybuilder",{"_index":304,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["abilityclass",{"_index":305,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["above",{"_index":996,"title":{},"body":{"license.html":{}}}],["abstraction",{"_index":937,"title":{},"body":{"index.html":{}}}],["access",{"_index":330,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["accessed",{"_index":827,"title":{},"body":{"index.html":{}}}],["accessible",{"_index":869,"title":{},"body":{"index.html":{}}}],["accessiblerecordsplugin",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["account",{"_index":608,"title":{},"body":{"injectables/UsersService.html":{}}}],["action",{"_index":1018,"title":{},"body":{"license.html":{}}}],["acts",{"_index":936,"title":{},"body":{"index.html":{}}}],["adapter",{"_index":867,"title":{},"body":{"index.html":{}}}],["add(this.expiration",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["admin",{"_index":615,"title":{},"body":{"injectables/UsersService.html":{}}}],["again",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["aliases",{"_index":1034,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alphanumeric",{"_index":856,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":989,"title":{},"body":{"license.html":{}}}],["angular",{"_index":739,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":676,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["another",{"_index":612,"title":{},"body":{"injectables/UsersService.html":{}}}],["api",{"_index":170,"title":{},"body":{"injectables/AppService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api/v1/docs",{"_index":172,"title":{},"body":{"injectables/AppService.html":{},"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":422,"title":{},"body":{"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["apiproperty()@isemail()@isnotempty",{"_index":433,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["apiproperty()@isnotempty()@minlength(8",{"_index":439,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["apiproperty()@matches(/^[a",{"_index":435,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["apiproperty({required",{"_index":416,"title":{},"body":{"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["apiresponse",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apis",{"_index":929,"title":{},"body":{"index.html":{}}}],["apitags",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apitags('authentication",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('users",{"_index":544,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["app.controller",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app](https://github.com/gothinkster/realworld",{"_index":953,"title":{},"body":{"index.html":{}}}],["app_env",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["app_guard",{"_index":563,"title":{},"body":{"modules/UsersModule.html":{}}}],["appability",{"_index":320,"title":{},"body":{"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"miscellaneous/typealiases.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":153,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["applications",{"_index":736,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":55,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appreciated",{"_index":956,"title":{},"body":{"index.html":{}}}],["apps/.../auth.controller.test.ts",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.service.test.ts",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../casl.factory.ts",{"_index":1035,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../check",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":724,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../policy",{"_index":1036,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../public.decorator.ts",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../user.schema.ts",{"_index":1037,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["apps/api/src/app.controller.ts:29",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/api/src/app.module.ts",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/api/src/app.service.ts",{"_index":152,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["apps/api/src/app.service.ts:11",{"_index":157,"title":{},"body":{"injectables/AppService.html":{}}}],["apps/api/src/app.service.ts:24",{"_index":163,"title":{},"body":{"injectables/AppService.html":{}}}],["apps/api/src/auth/auth.controller.test.ts",{"_index":646,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/auth/auth.controller.ts",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["apps/api/src/auth/auth.controller.ts:37",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["apps/api/src/auth/auth.controller.ts:51",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["apps/api/src/auth/auth.module.ts",{"_index":232,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/api/src/auth/auth.service.test.ts",{"_index":651,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/auth/auth.service.ts",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["apps/api/src/auth/auth.service.ts:21",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/auth/auth.service.ts:41",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/auth/auth.service.ts:66",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/auth/dto/login.dto.ts",{"_index":415,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["apps/api/src/auth/dto/login.dto.ts:16",{"_index":421,"title":{},"body":{"classes/LoginDto.html":{}}}],["apps/api/src/auth/dto/login.dto.ts:26",{"_index":418,"title":{},"body":{"classes/LoginDto.html":{}}}],["apps/api/src/auth/dto/register.dto.ts",{"_index":467,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["apps/api/src/auth/dto/register.dto.ts:22",{"_index":469,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apps/api/src/auth/dto/register.dto.ts:32",{"_index":473,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apps/api/src/auth/dto/register.dto.ts:42",{"_index":471,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apps/api/src/auth/dto/register.dto.ts:52",{"_index":472,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apps/api/src/auth/jwt",{"_index":366,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["apps/api/src/auth/jwt.strategy.ts",{"_index":388,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/api/src/auth/jwt.strategy.ts:13",{"_index":391,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/api/src/auth/jwt.strategy.ts:35",{"_index":394,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/api/src/auth/public.decorator.ts",{"_index":656,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/casl/casl.factory.ts",{"_index":299,"title":{},"body":{"injectables/CaslFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/api/src/casl/casl.factory.ts:21",{"_index":302,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["apps/api/src/casl/casl.module.ts",{"_index":346,"title":{},"body":{"modules/CaslModule.html":{}}}],["apps/api/src/casl/check",{"_index":658,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/casl/policies.guard.ts",{"_index":447,"title":{},"body":{"guards/PoliciesGuard.html":{},"coverage.html":{}}}],["apps/api/src/casl/policies.guard.ts:12",{"_index":450,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["apps/api/src/casl/policies.guard.ts:27",{"_index":452,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["apps/api/src/casl/policies.guard.ts:9",{"_index":449,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["apps/api/src/casl/policy",{"_index":349,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/api/src/environments/environment.prod.ts",{"_index":661,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/environments/environment.ts",{"_index":663,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/main.ts",{"_index":664,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/users/dto/patch",{"_index":430,"title":{},"body":{"classes/PatchUserDto.html":{},"coverage.html":{}}}],["apps/api/src/users/user.schema.ts",{"_index":474,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/users/user.schema.ts:16",{"_index":490,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/users/user.schema.ts:22",{"_index":481,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/users/user.schema.ts:28",{"_index":477,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/users/user.schema.ts:34",{"_index":479,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/users/user.schema.ts:40",{"_index":484,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/users/user.schema.ts:46",{"_index":482,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/users/users.controller.ts",{"_index":498,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["apps/api/src/users/users.controller.ts:41",{"_index":515,"title":{},"body":{"controllers/UsersController.html":{}}}],["apps/api/src/users/users.controller.ts:53",{"_index":525,"title":{},"body":{"controllers/UsersController.html":{}}}],["apps/api/src/users/users.controller.ts:71",{"_index":530,"title":{},"body":{"controllers/UsersController.html":{}}}],["apps/api/src/users/users.controller.ts:85",{"_index":509,"title":{},"body":{"controllers/UsersController.html":{}}}],["apps/api/src/users/users.module.ts",{"_index":562,"title":{},"body":{"modules/UsersModule.html":{}}}],["apps/api/src/users/users.service.ts",{"_index":570,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["apps/api/src/users/users.service.ts:116",{"_index":582,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/users/users.service.ts:21",{"_index":575,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/users/users.service.ts:36",{"_index":587,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/users/users.service.ts:45",{"_index":591,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/users/users.service.ts:55",{"_index":593,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/users/users.service.ts:69",{"_index":578,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/users/users.service.ts:97",{"_index":585,"title":{},"body":{"injectables/UsersService.html":{}}}],["appservice",{"_index":36,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["appservice.name",{"_index":169,"title":{},"body":{"injectables/AppService.html":{}}}],["apt",{"_index":775,"title":{},"body":{"index.html":{}}}],["arising",{"_index":1022,"title":{},"body":{"license.html":{}}}],["assign",{"_index":614,"title":{},"body":{"injectables/UsersService.html":{}}}],["associated",{"_index":978,"title":{},"body":{"license.html":{}}}],["async",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["atlas",{"_index":786,"title":{},"body":{"index.html":{}}}],["auth.controller",{"_index":240,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":565,"title":{},"body":{"modules/UsersModule.html":{}}}],["auth.guard.ts",{"_index":367,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:11",{"_index":372,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:16",{"_index":375,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/dto/register.dto",{"_index":598,"title":{},"body":{"injectables/UsersService.html":{}}}],["auth/jwt",{"_index":564,"title":{},"body":{"modules/UsersModule.html":{}}}],["auth/public.decorator",{"_index":39,"title":{},"body":{"controllers/AppController.html":{}}}],["authcontroller",{"_index":174,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticated",{"_index":518,"title":{},"body":{"controllers/UsersController.html":{}}}],["authentication",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["authentication/authorization",{"_index":758,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":378,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":381,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":61,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":965,"title":{},"body":{"index.html":{}}}],["authors",{"_index":1012,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":209,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":613,"title":{},"body":{"injectables/UsersService.html":{}}}],["automatically",{"_index":832,"title":{},"body":{"index.html":{}}}],["avatar",{"_index":619,"title":{},"body":{"injectables/UsersService.html":{}}}],["await",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["backend",{"_index":756,"title":{},"body":{"index.html":{}}}],["bad",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{}}}],["badrequestexception",{"_index":533,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["based",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["bearer",{"_index":396,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["behind",{"_index":845,"title":{},"body":{"index.html":{}}}],["below",{"_index":798,"title":{},"body":{"index.html":{}}}],["benefits",{"_index":864,"title":{},"body":{"index.html":{}}}],["body",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["boilerplate",{"_index":752,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":357,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{}}}],["bootstrap",{"_index":665,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["box",{"_index":762,"title":{},"body":{"index.html":{}}}],["branch",{"_index":871,"title":{},"body":{"index.html":{}}}],["branches",{"_index":945,"title":{},"body":{"index.html":{}}}],["brew",{"_index":773,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1025,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":683,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":323,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["building",{"_index":731,"title":{},"body":{"index.html":{}}}],["built",{"_index":826,"title":{},"body":{"index.html":{}}}],["bypass",{"_index":790,"title":{},"body":{"index.html":{}}}],["c",{"_index":967,"title":{},"body":{"license.html":{}}}],["can(useractionsenum.manage",{"_index":327,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["can(useractionsenum.read",{"_index":332,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["can(useractionsenum.update",{"_index":333,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["canactivate",{"_index":369,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["canactivate(context",{"_index":373,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["capability",{"_index":884,"title":{},"body":{"index.html":{}}}],["casl",{"_index":312,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["casl.factory",{"_index":347,"title":{},"body":{"modules/CaslModule.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{}}}],["casl/ability",{"_index":308,"title":{},"body":{"injectables/CaslFactory.html":{},"dependencies.html":{}}}],["casl/casl.factory",{"_index":566,"title":{},"body":{"modules/UsersModule.html":{}}}],["casl/casl.module",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["casl/check",{"_index":537,"title":{},"body":{"controllers/UsersController.html":{}}}],["casl/mongoose",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["casl/policies.guard",{"_index":538,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["casl/policy",{"_index":539,"title":{},"body":{"controllers/UsersController.html":{}}}],["caslfactory",{"_index":298,"title":{"injectables/CaslFactory.html":{}},"body":{"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"guards/PoliciesGuard.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["caslmodule",{"_index":62,"title":{"modules/CaslModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CaslModule.html":{},"modules.html":{},"overview.html":{}}}],["cert.pem",{"_index":895,"title":{},"body":{"index.html":{}}}],["certificate",{"_index":883,"title":{},"body":{"index.html":{}}}],["certs",{"_index":886,"title":{},"body":{"index.html":{}}}],["charge",{"_index":973,"title":{},"body":{"license.html":{}}}],["check",{"_index":455,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["check_policies_key",{"_index":454,"title":{},"body":{"guards/PoliciesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["check_policy",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["checkpolicies",{"_index":536,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["checkpolicies(new",{"_index":557,"title":{},"body":{"controllers/UsersController.html":{}}}],["checks",{"_index":395,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["choco",{"_index":774,"title":{},"body":{"index.html":{}}}],["choose",{"_index":611,"title":{},"body":{"injectables/UsersService.html":{}}}],["choosing",{"_index":744,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1015,"title":{},"body":{"license.html":{}}}],["class",{"_index":41,"title":{"classes/DeleteUserPolicyHandler.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":338,"title":{},"body":{"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"overview.html":{}}}],["clone",{"_index":801,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":784,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":228,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":229,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_caslmodule",{"_index":343,"title":{},"body":{"modules/CaslModule.html":{},"overview.html":{}}}],["cluster_caslmodule_exports",{"_index":345,"title":{},"body":{"modules/CaslModule.html":{},"overview.html":{}}}],["cluster_caslmodule_providers",{"_index":344,"title":{},"body":{"modules/CaslModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":560,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":561,"title":{},"body":{"modules/UsersModule.html":{}}}],["code",{"_index":922,"title":{},"body":{"index.html":{}}}],["column",{"_index":478,"title":{},"body":{"classes/User.html":{}}}],["comes",{"_index":757,"title":{},"body":{"index.html":{}}}],["coming",{"_index":321,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["command",{"_index":811,"title":{},"body":{"index.html":{}}}],["completed",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/UsersService.html":{}}}],["completed'})@apiresponse({status",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["compose",{"_index":794,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":995,"title":{},"body":{"license.html":{}}}],["config",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["config.get('app_env",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('app_env",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_url",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('webtoken_encryption_key",{"_index":250,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('webtoken_expiration_time",{"_index":252,"title":{},"body":{"modules/AuthModule.html":{}}}],["configuration",{"_index":743,"title":{},"body":{"index.html":{}}}],["configurations",{"_index":943,"title":{},"body":{"index.html":{}}}],["conflict",{"_index":822,"title":{},"body":{"index.html":{}}}],["connection",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"license.html":{}}}],["connection.plugin(accessiblerecordsplugin",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["connectionfactory",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["connnection",{"_index":861,"title":{},"body":{"index.html":{}}}],["const",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(configservice",{"_index":390,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(jwtservice",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(logger",{"_index":155,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(private",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":370,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["constructor(usermodel",{"_index":573,"title":{},"body":{"injectables/UsersService.html":{}}}],["container",{"_index":841,"title":{},"body":{"index.html":{}}}],["contents",{"_index":740,"title":{},"body":{"index.html":{}}}],["context",{"_index":376,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["context.getclass",{"_index":386,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":385,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":459,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["contract",{"_index":1019,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('v1/auth",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('v1/users",{"_index":545,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["copies",{"_index":991,"title":{},"body":{"license.html":{}}}],["copy",{"_index":976,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":966,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":640,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cp",{"_index":809,"title":{},"body":{"index.html":{}}}],["create",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["create(payload",{"_index":577,"title":{},"body":{"injectables/UsersService.html":{}}}],["created",{"_index":580,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["createdprofile",{"_index":617,"title":{},"body":{"injectables/UsersService.html":{}}}],["createdprofile.save",{"_index":628,"title":{},"body":{"injectables/UsersService.html":{}}}],["createforuser",{"_index":300,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["createforuser(user",{"_index":301,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["creates",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["createtoken",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["createtoken(undefined",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["creating",{"_index":311,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["crud",{"_index":759,"title":{},"body":{"index.html":{}}}],["crypto",{"_index":597,"title":{},"body":{"injectables/UsersService.html":{}}}],["crypto.createhmac('sha256",{"_index":605,"title":{},"body":{"injectables/UsersService.html":{}}}],["current",{"_index":517,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":610,"title":{},"body":{"injectables/UsersService.html":{}}}],["d",{"_index":626,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["daily",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["damages",{"_index":1016,"title":{},"body":{"license.html":{}}}],["data",{"_index":521,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["database",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["databases",{"_index":835,"title":{},"body":{"index.html":{}}}],["date%.log",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["datepattern",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["days",{"_index":896,"title":{},"body":{"index.html":{}}}],["db_url",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["dd",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["deal",{"_index":979,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1023,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["dedicated",{"_index":931,"title":{},"body":{"index.html":{}}}],["default",{"_index":849,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["defaultmeta",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["defaultstrategy",{"_index":246,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":507,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete(':username",{"_index":555,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':username')@useguards(policiesguard)@checkpolicies(new",{"_index":505,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(username",{"_index":581,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleted",{"_index":512,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteuserbyusername",{"_index":500,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuserbyusername(username",{"_index":504,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuserpolicyhandler",{"_index":348,"title":{"classes/DeleteUserPolicyHandler.html":{}},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["deleteuserpolicyhandler())@apiresponse({status",{"_index":506,"title":{},"body":{"controllers/UsersController.html":{}}}],["demand",{"_index":910,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":57,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deployed",{"_index":783,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":837,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":742,"title":{},"body":{"index.html":{}}}],["describe",{"_index":927,"title":{},"body":{"index.html":{}}}],["description",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["desktop",{"_index":792,"title":{},"body":{"index.html":{}}}],["detached",{"_index":842,"title":{},"body":{"index.html":{}}}],["details",{"_index":339,"title":{},"body":{"injectables/CaslFactory.html":{},"index.html":{}}}],["detection#use",{"_index":337,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["detectsubjecttype",{"_index":340,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["determines",{"_index":850,"title":{},"body":{"index.html":{}}}],["developers",{"_index":961,"title":{},"body":{"index.html":{}}}],["development",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["different",{"_index":870,"title":{},"body":{"index.html":{}}}],["directory",{"_index":839,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":987,"title":{},"body":{"license.html":{}}}],["docker",{"_index":764,"title":{},"body":{"index.html":{}}}],["docs",{"_index":909,"title":{},"body":{"index.html":{}}}],["docs/api",{"_index":914,"title":{},"body":{"index.html":{}}}],["docs/ui",{"_index":921,"title":{},"body":{"index.html":{}}}],["document",{"_index":492,"title":{},"body":{"classes/User.html":{}}}],["documentation",{"_index":173,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["download",{"_index":805,"title":{},"body":{"index.html":{}}}],["downloaded",{"_index":780,"title":{},"body":{"index.html":{}}}],["downloading",{"_index":769,"title":{},"body":{"index.html":{}}}],["dto",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["dto/login.dto",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/patch",{"_index":540,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/register.dto",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["dynamic",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":616,"title":{},"body":{"injectables/UsersService.html":{}}}],["easily",{"_index":782,"title":{},"body":{"index.html":{}}}],["edit",{"_index":531,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["edit(payload",{"_index":584,"title":{},"body":{"injectables/UsersService.html":{}}}],["efficient",{"_index":732,"title":{},"body":{"index.html":{}}}],["email",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["employed",{"_index":949,"title":{},"body":{"index.html":{}}}],["employing",{"_index":900,"title":{},"body":{"index.html":{}}}],["enable",{"_index":874,"title":{},"body":{"index.html":{}}}],["encrypt/decrypt",{"_index":854,"title":{},"body":{"index.html":{}}}],["end",{"_index":916,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":489,"title":{},"body":{"classes/User.html":{}}}],["env",{"_index":808,"title":{},"body":{"index.html":{}}}],["env.example",{"_index":810,"title":{},"body":{"index.html":{}}}],["environment",{"_index":662,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["event",{"_index":1011,"title":{},"body":{"license.html":{}}}],["everything",{"_index":331,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["example",{"_index":952,"title":{},"body":{"index.html":{}}}],["exec",{"_index":602,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["execpolicyhandler",{"_index":448,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["execpolicyhandler(handler",{"_index":451,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["execute",{"_index":838,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":374,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["exist",{"_index":633,"title":{},"body":{"injectables/UsersService.html":{}}}],["existing",{"_index":813,"title":{},"body":{"index.html":{}}}],["exists",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["exp",{"_index":412,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["expiration",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["expirationformatted",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["expire",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["expiresin",{"_index":253,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaslModule.html":{}}}],["exposed",{"_index":820,"title":{},"body":{"index.html":{}}}],["express",{"_index":866,"title":{},"body":{"index.html":{},"license.html":{}}}],["extends",{"_index":380,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["extensive",{"_index":942,"title":{},"body":{"index.html":{}}}],["extractjwt",{"_index":400,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":404,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractsubjecttype",{"_index":306,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["failed",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["false",{"_index":406,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["fastify",{"_index":698,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["fastify/helmet",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["fastify/rate",{"_index":690,"title":{},"body":{"dependencies.html":{}}}],["fastify/static",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["feat",{"_index":947,"title":{},"body":{"index.html":{}}}],["feat/http2",{"_index":881,"title":{},"body":{"index.html":{}}}],["features",{"_index":760,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":524,"title":{},"body":{"controllers/UsersController.html":{}}}],["fetches",{"_index":588,"title":{},"body":{"injectables/UsersService.html":{}}}],["field",{"_index":419,"title":{},"body":{"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["fields",{"_index":579,"title":{},"body":{"injectables/UsersService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["filename",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["files",{"_index":917,"title":{},"body":{"index.html":{},"license.html":{}}}],["findone",{"_index":604,"title":{},"body":{"injectables/UsersService.html":{}}}],["fitness",{"_index":1008,"title":{},"body":{"license.html":{}}}],["folder",{"_index":887,"title":{},"body":{"index.html":{}}}],["follow",{"_index":795,"title":{},"body":{"index.html":{}}}],["following",{"_index":777,"title":{},"body":{"index.html":{},"license.html":{}}}],["format",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["format('lll",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["found",{"_index":551,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["framework",{"_index":730,"title":{},"body":{"index.html":{}}}],["free",{"_index":787,"title":{},"body":{"index.html":{},"license.html":{}}}],["front",{"_index":915,"title":{},"body":{"index.html":{}}}],["fully",{"_index":957,"title":{},"body":{"index.html":{}}}],["function",{"_index":464,"title":{},"body":{"guards/PoliciesGuard.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":723,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":994,"title":{},"body":{"license.html":{}}}],["further",{"_index":941,"title":{},"body":{"index.html":{}}}],["generate",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["generated",{"_index":888,"title":{},"body":{"index.html":{}}}],["get(':username",{"_index":547,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':username')@apiresponse({status",{"_index":523,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('user",{"_index":514,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(id",{"_index":586,"title":{},"body":{"injectables/UsersService.html":{}}}],["getbyusername",{"_index":571,"title":{},"body":{"injectables/UsersService.html":{}}}],["getbyusername(username",{"_index":590,"title":{},"body":{"injectables/UsersService.html":{}}}],["getbyusernameandpass",{"_index":572,"title":{},"body":{"injectables/UsersService.html":{}}}],["getbyusernameandpass(username",{"_index":592,"title":{},"body":{"injectables/UsersService.html":{}}}],["getstartingmessage",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":725,"title":{"index.html":{},"license.html":{}},"body":{}}],["getuser",{"_index":501,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuser(@request",{"_index":546,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuser(req",{"_index":513,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyusername",{"_index":502,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyusername(@param('username",{"_index":549,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyusername(username",{"_index":522,"title":{},"body":{"controllers/UsersController.html":{}}}],["git",{"_index":802,"title":{},"body":{"index.html":{}}}],["github",{"_index":907,"title":{},"body":{"index.html":{}}}],["given",{"_index":527,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["granted",{"_index":972,"title":{},"body":{"license.html":{}}}],["gravatar",{"_index":475,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["guard",{"_index":368,"title":{"guards/PoliciesGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":446,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["guide",{"_index":778,"title":{},"body":{"index.html":{}}}],["h2",{"_index":876,"title":{},"body":{"index.html":{}}}],["h2c",{"_index":878,"title":{},"body":{"index.html":{}}}],["handle",{"_index":353,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{}}}],["handle(ability",{"_index":354,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{}}}],["handler",{"_index":453,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["handler(ability",{"_index":465,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["handler.handle(ability",{"_index":466,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["handlers",{"_index":361,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["handlers.ts",{"_index":350,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["handlers.ts:17",{"_index":355,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{}}}],["handlers.ts:7",{"_index":364,"title":{},"body":{"interfaces/IPolicyHandler.html":{}}}],["hashed",{"_index":594,"title":{},"body":{"injectables/UsersService.html":{}}}],["heavily",{"_index":737,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":971,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1013,"title":{},"body":{"license.html":{}}}],["hosting",{"_index":918,"title":{},"body":{"index.html":{}}}],["http",{"_index":622,"title":{},"body":{"injectables/UsersService.html":{}}}],["http/2",{"_index":872,"title":{},"body":{"index.html":{}}}],["http2",{"_index":746,"title":{},"body":{"index.html":{}}}],["http://localhost:3333",{"_index":821,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":828,"title":{},"body":{"index.html":{}}}],["http://localhost:80",{"_index":844,"title":{},"body":{"index.html":{}}}],["https",{"_index":875,"title":{},"body":{"index.html":{}}}],["https://casl.js.org/v5/en/guide/subject",{"_index":336,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["https://github.com/msanvarov/nest",{"_index":803,"title":{},"body":{"index.html":{}}}],["iat",{"_index":411,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["id",{"_index":413,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":641,"title":{},"body":{"coverage.html":{}}}],["igenericmessagebody",{"_index":535,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ignoreexpiration",{"_index":405,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ijwtresponsebody",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["imessage",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["implements",{"_index":351,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{}}}],["implied",{"_index":1004,"title":{},"body":{"license.html":{}}}],["import",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["included",{"_index":999,"title":{},"body":{"license.html":{}}}],["including",{"_index":981,"title":{},"body":{"license.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["infersubjects",{"_index":307,"title":{},"body":{"injectables/CaslFactory.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{}}}],["inject(winston_module_provider",{"_index":165,"title":{},"body":{"injectables/AppService.html":{}}}],["injectable",{"_index":150,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":151,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":596,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectmodel(user.name",{"_index":599,"title":{},"body":{"injectables/UsersService.html":{}}}],["inspired",{"_index":738,"title":{},"body":{"index.html":{}}}],["interface",{"_index":356,"title":{"interfaces/IPolicyHandler.html":{}},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":363,"title":{},"body":{"interfaces/IPolicyHandler.html":{}}}],["ipolicyhandler",{"_index":352,"title":{"interfaces/IPolicyHandler.html":{}},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["is_public_key",{"_index":379,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isalphanumeric",{"_index":423,"title":{},"body":{"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["isemail",{"_index":442,"title":{},"body":{"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty",{"_index":424,"title":{},"body":{"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["ispublic",{"_index":383,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["it's",{"_index":857,"title":{},"body":{"index.html":{}}}],["item",{"_index":341,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["item.constructor",{"_index":342,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["javascript",{"_index":770,"title":{},"body":{"index.html":{}}}],["joi",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["joi.number().default(1800",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.object",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().required",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["join(__dirname",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt",{"_index":247,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":241,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":365,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":403,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":234,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":248,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":408,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtservice",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":231,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":853,"title":{},"body":{"index.html":{}}}],["key.pem",{"_index":894,"title":{},"body":{"index.html":{}}}],["keyout",{"_index":893,"title":{},"body":{"index.html":{}}}],["keyword",{"_index":317,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["kind",{"_index":1003,"title":{},"body":{"license.html":{}}}],["layer",{"_index":938,"title":{},"body":{"index.html":{}}}],["level",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["liability",{"_index":1017,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1014,"title":{},"body":{"license.html":{}}}],["library",{"_index":902,"title":{},"body":{"index.html":{}}}],["license",{"_index":962,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":964,"title":{},"body":{"index.html":{}}}],["limit",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["limitation",{"_index":982,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1005,"title":{},"body":{"license.html":{}}}],["loads",{"_index":840,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":919,"title":{},"body":{"index.html":{}}}],["locally",{"_index":768,"title":{},"body":{"index.html":{}}}],["located",{"_index":885,"title":{},"body":{"index.html":{}}}],["location",{"_index":933,"title":{},"body":{"index.html":{}}}],["logger",{"_index":156,"title":{},"body":{"injectables/AppService.html":{}}}],["logging",{"_index":162,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["login",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{}}}],["login(@body",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(payload",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{}}}],["logindto",{"_index":182,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logs",{"_index":749,"title":{},"body":{"index.html":{}}}],["logs/application",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["logs/error.log",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["luckily",{"_index":873,"title":{},"body":{"index.html":{}}}],["made",{"_index":753,"title":{},"body":{"index.html":{}}}],["main",{"_index":946,"title":{},"body":{"index.html":{}}}],["make",{"_index":765,"title":{},"body":{"index.html":{}}}],["makes",{"_index":879,"title":{},"body":{"index.html":{}}}],["manage",{"_index":314,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["manual",{"_index":799,"title":{},"body":{"index.html":{}}}],["many",{"_index":487,"title":{},"body":{"classes/User.html":{}}}],["mapping",{"_index":935,"title":{},"body":{"index.html":{}}}],["matches",{"_index":443,"title":{},"body":{"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["matches(/^[a",{"_index":444,"title":{},"body":{"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["matching",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxfiles",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["maxsize",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["merchantability",{"_index":1007,"title":{},"body":{"license.html":{}}}],["merge",{"_index":985,"title":{},"body":{"license.html":{}}}],["message",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/UsersService.html":{}}}],["metadata",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":410,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["methods",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minlength",{"_index":425,"title":{},"body":{"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["minlength(8",{"_index":428,"title":{},"body":{"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["mins",{"_index":860,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":722,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":963,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mm",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["mode",{"_index":817,"title":{},"body":{"index.html":{}}}],["model",{"_index":574,"title":{},"body":{"injectables/UsersService.html":{}}}],["modify",{"_index":984,"title":{},"body":{"license.html":{}}}],["module",{"_index":54,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["modulemocker",{"_index":648,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["modulemocker(global",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modules",{"_index":56,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["mongo",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["mongodb",{"_index":776,"title":{},"body":{"index.html":{}}}],["mongoose",{"_index":493,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":242,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemoduleasyncoptions",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["msanvarov",{"_index":969,"title":{},"body":{"license.html":{}}}],["mutated",{"_index":532,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["name",{"_index":159,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["navigate",{"_index":171,"title":{},"body":{"injectables/AppService.html":{}}}],["nest",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/common",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":377,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":235,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":237,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newkey",{"_index":891,"title":{},"body":{"index.html":{}}}],["nginx",{"_index":846,"title":{},"body":{"index.html":{}}}],["node.js",{"_index":729,"title":{},"body":{"index.html":{}}}],["nodes",{"_index":898,"title":{},"body":{"index.html":{}}}],["non",{"_index":763,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":1010,"title":{},"body":{"license.html":{}}}],["notacceptableexception",{"_index":595,"title":{},"body":{"injectables/UsersService.html":{}}}],["notice",{"_index":997,"title":{},"body":{"license.html":{}}}],["npm",{"_index":806,"title":{},"body":{"index.html":{}}}],["nrwl/angular",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["number",{"_index":254,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["nx",{"_index":751,"title":{},"body":{"index.html":{}}}],["object",{"_index":398,"title":{},"body":{"injectables/JwtStrategy.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["obtaining",{"_index":975,"title":{},"body":{"license.html":{}}}],["offers",{"_index":862,"title":{},"body":{"index.html":{}}}],["one",{"_index":486,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["open",{"_index":923,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["open_api_current_version",{"_index":666,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["open_api_description",{"_index":668,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["open_api_name",{"_index":669,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["open_api_root",{"_index":670,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["openssl",{"_index":889,"title":{},"body":{"index.html":{}}}],["operation",{"_index":583,"title":{},"body":{"injectables/UsersService.html":{}}}],["operational",{"_index":793,"title":{},"body":{"index.html":{}}}],["operations",{"_index":939,"title":{},"body":{"index.html":{}}}],["option",{"_index":789,"title":{},"body":{"index.html":{}}}],["optional",{"_index":161,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["options",{"_index":851,"title":{},"body":{"index.html":{}}}],["os",{"_index":960,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1021,"title":{},"body":{"license.html":{}}}],["out",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outlined",{"_index":797,"title":{},"body":{"index.html":{}}}],["over",{"_index":865,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1026,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":675,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pages",{"_index":908,"title":{},"body":{"index.html":{}}}],["param",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["param('username",{"_index":558,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":158,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["particular",{"_index":526,"title":{},"body":{"controllers/UsersController.html":{},"license.html":{}}}],["passion",{"_index":959,"title":{},"body":{"index.html":{}}}],["passport",{"_index":401,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":236,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":245,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":399,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":402,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["password).digest('hex",{"_index":606,"title":{},"body":{"injectables/UsersService.html":{}}}],["patch",{"_index":432,"title":{},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{}}}],["patch()@apiresponse({status",{"_index":529,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser",{"_index":503,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser(@body",{"_index":553,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser(payload",{"_index":528,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuserdto",{"_index":429,"title":{"classes/PatchUserDto.html":{}},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["path",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["payload.password).digest('hex",{"_index":618,"title":{},"body":{"injectables/UsersService.html":{}}}],["performance",{"_index":863,"title":{},"body":{"index.html":{}}}],["permission",{"_index":970,"title":{},"body":{"license.html":{}}}],["permit",{"_index":992,"title":{},"body":{"license.html":{}}}],["persistence",{"_index":761,"title":{},"body":{"index.html":{}}}],["person",{"_index":974,"title":{},"body":{"license.html":{}}}],["persons",{"_index":993,"title":{},"body":{"license.html":{}}}],["pg",{"_index":625,"title":{},"body":{"injectables/UsersService.html":{}}}],["placeholders",{"_index":814,"title":{},"body":{"index.html":{}}}],["plaintext",{"_index":877,"title":{},"body":{"index.html":{}}}],["plaintoclass(user",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plaintoclass(userroles",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["please",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["policies.decorator",{"_index":456,"title":{},"body":{"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{}}}],["policies.decorator.ts",{"_index":659,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["policiesguard",{"_index":445,"title":{"guards/PoliciesGuard.html":{}},"body":{"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["policy",{"_index":360,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{}}}],["policyhandler",{"_index":359,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["policyhandlercallback",{"_index":358,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"miscellaneous/typealiases.html":{}}}],["policyhandlers",{"_index":457,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["policyhandlers.every((handler",{"_index":461,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["portions",{"_index":1001,"title":{},"body":{"license.html":{}}}],["ports",{"_index":825,"title":{},"body":{"index.html":{}}}],["post",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["prerequisites",{"_index":741,"title":{},"body":{"index.html":{}}}],["private",{"_index":166,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"injectables/UsersService.html":{}}}],["procedure",{"_index":796,"title":{},"body":{"index.html":{}}}],["produce",{"_index":913,"title":{},"body":{"index.html":{}}}],["production",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["profileservice",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["progress",{"_index":944,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":728,"title":{},"body":{"index.html":{}}}],["project",{"_index":831,"title":{},"body":{"index.html":{}}}],["promise",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["prop",{"_index":476,"title":{},"body":{"classes/User.html":{}}}],["prop(['string",{"_index":483,"title":{},"body":{"classes/User.html":{}}}],["prop([string",{"_index":495,"title":{},"body":{"classes/User.html":{}}}],["properties",{"_index":256,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"properties.html":{}}}],["protocol",{"_index":621,"title":{},"body":{"injectables/UsersService.html":{}}}],["prototype",{"_index":755,"title":{},"body":{"index.html":{}}}],["provide",{"_index":568,"title":{},"body":{"modules/UsersModule.html":{}}}],["provided",{"_index":609,"title":{},"body":{"injectables/UsersService.html":{},"license.html":{}}}],["provider",{"_index":785,"title":{},"body":{"index.html":{}}}],["providers",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{}}}],["provides",{"_index":930,"title":{},"body":{"index.html":{}}}],["proxy",{"_index":848,"title":{},"body":{"index.html":{}}}],["prs",{"_index":955,"title":{},"body":{"index.html":{}}}],["public",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get('/')@apiresponse({status",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["public()@post('login')@apiresponse({status",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post('register')@apiresponse({status",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["public.decorator",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["publish",{"_index":986,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1009,"title":{},"body":{"license.html":{}}}],["queried",{"_index":520,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["quickly",{"_index":754,"title":{},"body":{"index.html":{}}}],["r",{"_index":624,"title":{},"body":{"injectables/UsersService.html":{}}}],["ran",{"_index":899,"title":{},"body":{"index.html":{}}}],["random",{"_index":855,"title":{},"body":{"index.html":{}}}],["react",{"_index":823,"title":{},"body":{"index.html":{}}}],["read",{"_index":328,"title":{},"body":{"injectables/CaslFactory.html":{},"index.html":{}}}],["readonly",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["real",{"_index":950,"title":{},"body":{"index.html":{}}}],["received",{"_index":548,"title":{},"body":{"controllers/UsersController.html":{}}}],["received'})@apiresponse({status",{"_index":508,"title":{},"body":{"controllers/UsersController.html":{}}}],["record",{"_index":393,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["records",{"_index":639,"title":{},"body":{"injectables/UsersService.html":{}}}],["reflect",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":371,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["register",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{},"classes/RegisterDto.html":{}}}],["register(@body",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(payload",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdto",{"_index":198,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["registered",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["registerpayload",{"_index":552,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["registration",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["relational",{"_index":934,"title":{},"body":{"index.html":{}}}],["relationship",{"_index":488,"title":{},"body":{"classes/User.html":{}}}],["rely",{"_index":958,"title":{},"body":{"index.html":{}}}],["remark",{"_index":315,"title":{},"body":{"injectables/CaslFactory.html":{},"index.html":{}}}],["remove",{"_index":511,"title":{},"body":{"controllers/UsersController.html":{}}}],["removes",{"_index":510,"title":{},"body":{"controllers/UsersController.html":{}}}],["replace",{"_index":812,"title":{},"body":{"index.html":{}}}],["repo",{"_index":750,"title":{},"body":{"index.html":{}}}],["represent",{"_index":485,"title":{},"body":{"classes/User.html":{}}}],["represents",{"_index":318,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["req",{"_index":519,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["req.user",{"_index":322,"title":{},"body":{"injectables/CaslFactory.html":{},"controllers/UsersController.html":{}}}],["request",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["request'})@apiresponse({status",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{}}}],["required",{"_index":427,"title":{},"body":{"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"index.html":{}}}],["requirement",{"_index":791,"title":{},"body":{"index.html":{}}}],["reset",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["responses",{"_index":815,"title":{},"body":{"index.html":{}}}],["rest",{"_index":804,"title":{},"body":{"index.html":{}}}],["restful",{"_index":928,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":980,"title":{},"body":{"license.html":{}}}],["results",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieves",{"_index":516,"title":{},"body":{"controllers/UsersController.html":{}}}],["return",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["reverse",{"_index":847,"title":{},"body":{"index.html":{}}}],["rights",{"_index":983,"title":{},"body":{"license.html":{}}}],["role",{"_index":325,"title":{},"body":{"injectables/CaslFactory.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["roles",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["rootpath",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["rotate",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["route",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["rsa:4096",{"_index":892,"title":{},"body":{"index.html":{}}}],["run",{"_index":819,"title":{},"body":{"index.html":{}}}],["running",{"_index":903,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":771,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":623,"title":{},"body":{"injectables/UsersService.html":{}}}],["scalable",{"_index":733,"title":{},"body":{"index.html":{}}}],["schema",{"_index":244,"title":{},"body":{"modules/AuthModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":491,"title":{},"body":{"classes/User.html":{}}}],["schemafactory.createforclass(user",{"_index":496,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["seconds",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["secret",{"_index":249,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":407,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["self",{"_index":882,"title":{},"body":{"index.html":{}}}],["sell",{"_index":990,"title":{},"body":{"license.html":{}}}],["served",{"_index":833,"title":{},"body":{"index.html":{}}}],["server",{"_index":734,"title":{},"body":{"index.html":{}}}],["servestaticmodule",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forrootasync",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["service",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["setmetadata(check_policies_key",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(is_public_key",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":998,"title":{},"body":{"license.html":{}}}],["short",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":735,"title":{},"body":{"index.html":{}}}],["signed",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"index.html":{}}}],["signoptions",{"_index":251,"title":{},"body":{"modules/AuthModule.html":{}}}],["software",{"_index":977,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["spdy",{"_index":901,"title":{},"body":{"index.html":{}}}],["special",{"_index":316,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["specification",{"_index":925,"title":{},"body":{"index.html":{}}}],["sql",{"_index":834,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":781,"title":{},"body":{"index.html":{}}}],["start",{"_index":816,"title":{},"body":{"index.html":{}}}],["started",{"_index":726,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["starter",{"_index":727,"title":{},"body":{"index.html":{}}}],["starter/api",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["startingmessage",{"_index":154,"title":{},"body":{"injectables/AppService.html":{}}}],["statements",{"_index":642,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["status",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["still",{"_index":868,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":389,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":319,"title":{},"body":{"injectables/CaslFactory.html":{},"license.html":{}}}],["subjects",{"_index":313,"title":{},"body":{"injectables/CaslFactory.html":{},"miscellaneous/typealiases.html":{}}}],["sublicense",{"_index":988,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1000,"title":{},"body":{"license.html":{}}}],["super",{"_index":382,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":387,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":954,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sure",{"_index":766,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1024,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":924,"title":{},"body":{"index.html":{}}}],["system",{"_index":634,"title":{},"body":{"injectables/UsersService.html":{}}}],["table",{"_index":674,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":673,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":948,"title":{},"body":{"index.html":{}}}],["terminal",{"_index":829,"title":{},"body":{"index.html":{}}}],["test",{"_index":906,"title":{},"body":{"index.html":{}}}],["test@user.com",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testing",{"_index":747,"title":{},"body":{"index.html":{}}}],["tests",{"_index":905,"title":{},"body":{"index.html":{}}}],["then((user",{"_index":637,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.appservice.startingmessage",{"_index":51,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.createtoken(user",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(payload",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.caslfactory.createforuser(user",{"_index":460,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["this.configservice.get('webtoken_expiration_time",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.execpolicyhandler(handler",{"_index":462,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["this.expiration",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getbyusername(payload.username",{"_index":607,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.getbyusername(username",{"_index":635,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.jwtservice.sign",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.info('calling",{"_index":167,"title":{},"body":{"injectables/AppService.html":{}}}],["this.reflector.get",{"_index":458,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":384,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.usermodel",{"_index":603,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.deleteone",{"_index":636,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(id).exec",{"_index":600,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":601,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.updateone",{"_index":630,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(payload",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.delete(username",{"_index":559,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.edit(payload",{"_index":554,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.getbyusername(username",{"_index":550,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.getbyusernameandpass",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["tier",{"_index":788,"title":{},"body":{"index.html":{}}}],["time",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["timediff",{"_index":414,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["token",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"index.html":{}}}],["tokens",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["tort",{"_index":1020,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["transports",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"miscellaneous/variables.html":{}}}],["true})@isalphanumeric()@isnotempty",{"_index":420,"title":{},"body":{"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["true})@isemail()@isnotempty",{"_index":468,"title":{},"body":{"classes/RegisterDto.html":{}}}],["true})@isnotempty()@minlength(8",{"_index":417,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["true})@matches(/^[a",{"_index":470,"title":{},"body":{"classes/RegisterDto.html":{}}}],["try",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["tslib",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":160,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1033,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedocs",{"_index":748,"title":{},"body":{"index.html":{}}}],["typedocs:api:start",{"_index":912,"title":{},"body":{"index.html":{}}}],["typedocs:ui:start",{"_index":920,"title":{},"body":{"index.html":{}}}],["typeof",{"_index":463,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["typeorm",{"_index":836,"title":{},"body":{"index.html":{}}}],["types",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["typing",{"_index":911,"title":{},"body":{"index.html":{}}}],["ui",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["unauthorized",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["unauthorizedexception",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unit",{"_index":904,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["up",{"_index":843,"title":{},"body":{"index.html":{}}}],["update",{"_index":335,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["updatedprofile",{"_index":629,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatedprofile.modifiedcount",{"_index":631,"title":{},"body":{"injectables/UsersService.html":{}}}],["uri",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":480,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["url(payload.email",{"_index":620,"title":{},"body":{"injectables/UsersService.html":{}}}],["use",{"_index":880,"title":{},"body":{"index.html":{},"license.html":{}}}],["useclass",{"_index":569,"title":{},"body":{"modules/UsersModule.html":{}}}],["used",{"_index":926,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["useguards",{"_index":534,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(policiesguard",{"_index":556,"title":{},"body":{"controllers/UsersController.html":{}}}],["usenewurlparser",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":221,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtStrategy.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.deletedcount",{"_index":638,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.dto",{"_index":541,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":431,"title":{},"body":{"classes/PatchUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:20",{"_index":434,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:30",{"_index":441,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:38",{"_index":438,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:46",{"_index":440,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.name",{"_index":243,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["user.roles.some((role",{"_index":324,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["user.schema",{"_index":542,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.username",{"_index":334,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["useractionsenum",{"_index":309,"title":{},"body":{"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{}}}],["userdocument",{"_index":494,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["usermodel",{"_index":576,"title":{},"body":{"injectables/UsersService.html":{}}}],["username",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["userrole",{"_index":652,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userroles",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userrolesenum",{"_index":310,"title":{},"body":{"injectables/CaslFactory.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["userrolesenum.sudo",{"_index":326,"title":{},"body":{"injectables/CaslFactory.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":567,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":543,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/user.schema",{"_index":239,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtStrategy.html":{}}}],["users/users.module",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["users/users.service",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["userschema",{"_index":238,"title":{},"body":{"modules/AuthModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":497,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":63,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":207,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["useunifiedtopology",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":818,"title":{},"body":{"index.html":{}}}],["utilize",{"_index":852,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":589,"title":{},"body":{"injectables/UsersService.html":{}}}],["v1/auth",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{}}}],["v1/users",{"_index":499,"title":{},"body":{"controllers/UsersController.html":{}}}],["valid",{"_index":397,"title":{},"body":{"injectables/JwtStrategy.html":{},"index.html":{}}}],["valid('development",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["validate",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["validate(undefined",{"_index":392,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validates",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(undefined",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":409,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validationschema",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":426,"title":{},"body":{"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"dependencies.html":{}}}],["value",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":647,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["variables",{"_index":1038,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1031,"title":{},"body":{"properties.html":{},"miscellaneous/variables.html":{}}}],["via",{"_index":772,"title":{},"body":{"index.html":{}}}],["view",{"_index":940,"title":{},"body":{"index.html":{}}}],["vue",{"_index":824,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1006,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1002,"title":{},"body":{"license.html":{}}}],["web",{"_index":745,"title":{},"body":{"index.html":{}}}],["website",{"_index":779,"title":{},"body":{"index.html":{}}}],["webtoken_encryption_key",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["webtoken_expiration_time",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["welcome",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["welcomemessage",{"_index":168,"title":{},"body":{"injectables/AppService.html":{}}}],["whether",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["window",{"_index":830,"title":{},"body":{"index.html":{}}}],["winston",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"dependencies.html":{},"index.html":{}}}],["winston.format.json",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.format.simple",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.transports.console",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.transports.file",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["winston_module_provider",{"_index":164,"title":{},"body":{"injectables/AppService.html":{}}}],["winstonfilerotator",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["winstonmodule",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["winstonmodule.forrootasync",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["without",{"_index":800,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":932,"title":{},"body":{"index.html":{}}}],["world",{"_index":951,"title":{},"body":{"index.html":{}}}],["write",{"_index":329,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["x509",{"_index":890,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":807,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["z",{"_index":437,"title":{},"body":{"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["za",{"_index":436,"title":{},"body":{"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["zippedarchive",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["zone.js",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                App Controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getStartingMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getStartingMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStartingMessage()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('/')@ApiResponse({status: 200, description: 'Root Request Completed'})@ApiResponse({status: 400, description: 'Root Request Failed'})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app.controller.ts:29\n                \n            \n\n\n            \n                \n                    Returns a welcome message\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        a welcome message\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse } from '@nestjs/swagger';\n\nimport { IMessage } from '@starter/api-types';\n\nimport { AppService } from './app.service';\nimport { Public } from './auth/public.decorator';\n\n/**\n * App Controller\n */\n@ApiBearerAuth()\n@Controller()\nexport class AppController {\n  /**\n   * Constructor\n   * @param {AppService} appService app service\n   */\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * Returns a welcome message\n   * @returns {string} a welcome message\n   */\n  @Public()\n  @Get('/')\n  @ApiResponse({ status: 200, description: 'Root Request Completed' })\n  @ApiResponse({ status: 400, description: 'Root Request Failed' })\n  async getStartingMessage(): Promise {\n    return this.appService.startingMessage();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCaslModule\n\nCaslModule\n\nAppModule -->\n\nCaslModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CaslModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { accessibleRecordsPlugin } from '@casl/mongoose';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { MongooseModule, MongooseModuleAsyncOptions } from '@nestjs/mongoose';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport * as joi from 'joi';\nimport { WinstonModule } from 'nest-winston';\nimport { join } from 'path';\nimport * as winston from 'winston';\nimport * as winstonFileRotator from 'winston-daily-rotate-file';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { CaslModule } from './casl/casl.module';\nimport { UsersModule } from './users/users.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      validationSchema: joi.object({\n        APP_ENV: joi\n          .string()\n          .valid('development', 'production')\n          .default('development'),\n        WEBTOKEN_ENCRYPTION_KEY: joi.string().required(),\n        WEBTOKEN_EXPIRATION_TIME: joi.number().default(1800),\n        DB_URL: joi.string().required(),\n      }),\n    }),\n    ServeStaticModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) =>\n        config.get('APP_ENV') === 'production'\n          ? [\n              {\n                rootPath: join(__dirname, '..', 'ui'),\n              },\n            ]\n          : [],\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) =>\n        ({\n          uri: configService.get('DB_URL'),\n          useNewUrlParser: true,\n          useUnifiedTopology: true,\n          connectionFactory: (connection) => {\n            connection.plugin(accessibleRecordsPlugin);\n            return connection;\n          },\n        } as MongooseModuleAsyncOptions),\n    }),\n    WinstonModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => {\n        return configService.get('APP_ENV') === 'development'\n          ? {\n              level: 'info',\n              format: winston.format.json(),\n              defaultMeta: { service: 'nest-mongo-service' },\n              transports: [\n                new winston.transports.Console({\n                  format: winston.format.simple(),\n                }),\n              ],\n            }\n          : {\n              level: 'info',\n              format: winston.format.json(),\n              defaultMeta: { service: 'nest-mongo-service' },\n              transports: [\n                new winston.transports.File({\n                  filename: 'logs/error.log',\n                  level: 'error',\n                }),\n                new winston.transports.Console({\n                  format: winston.format.simple(),\n                }),\n                new winstonFileRotator({\n                  filename: 'logs/application-%DATE%.log',\n                  datePattern: 'YYYY-MM-DD',\n                  zippedArchive: true,\n                  maxSize: '20m',\n                  maxFiles: '14d',\n                }),\n              ],\n            };\n      },\n    }),\n    AuthModule,\n    UsersModule,\n    CaslModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Application Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                startingMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app.service.ts:11\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                logging service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        startingMessage\n                        \n                    \n                \n            \n            \n                \nstartingMessage()\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app.service.ts:24\n                \n            \n\n\n            \n                \n                    Returns a welcome message.\n\n\n                    \n                    \n                    \n                        Returns :     IMessage\n\n                    \n                    \n                        welcome message\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\nimport { Logger } from 'winston';\n\nimport { IMessage } from '@starter/api-types';\n\n/**\n * Application Service\n */\n@Injectable()\nexport class AppService {\n  /**\n   * Constructor\n   * @param {Logger} logger logging service\n   */\n  constructor(\n    @Inject(WINSTON_MODULE_PROVIDER) private readonly logger: Logger\n  ) {}\n\n  /**\n   * Returns a welcome message.\n   * @returns {string} welcome message\n   */\n  startingMessage(): IMessage {\n    this.logger.info('Calling welcomeMessage -> ', AppService.name);\n\n    return {\n      message: 'Welcome to api! Navigate to api/v1/docs for documentation.',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/auth\n            \n\n\n            \n                Description\n            \n            \n                Authentication Controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(payload: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('login')@ApiResponse({status: 201, description: 'Login Completed'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/auth/auth.controller.ts:37\n                \n            \n\n\n            \n                \n                    Login route to validate and create tokens for users\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the login dto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(payload: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('register')@ApiResponse({status: 201, description: 'Registration Completed'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/auth/auth.controller.ts:51\n                \n            \n\n\n            \n                \n                    Authentication route to register\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the registration dto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { IJWTResponseBody } from '@starter/api-types';\n\nimport { UsersService } from '../users/users.service';\nimport { AuthService } from './auth.service';\nimport { LoginDto } from './dto/login.dto';\nimport { RegisterDto } from './dto/register.dto';\nimport { Public } from './public.decorator';\n\n/**\n * Authentication Controller\n */\n@ApiTags('authentication')\n@Controller('v1/auth')\nexport class AuthController {\n  /**\n   * Constructor\n   * @param {AuthService} authService authentication service\n   * @param {ProfileService} usersService profile service\n   */\n  constructor(\n    private readonly authService: AuthService,\n    private readonly usersService: UsersService,\n  ) {}\n\n  /**\n   * Login route to validate and create tokens for users\n   * @param {LoginDto} payload the login dto\n   */\n  @Public()\n  @Post('login')\n  @ApiResponse({ status: 201, description: 'Login Completed' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async login(@Body() payload: LoginDto): Promise {\n    const user = await this.authService.validateUser(payload);\n    return this.authService.createToken(user);\n  }\n\n  /**\n   * Authentication route to register\n   * @param {RegisterDto} payload the registration dto\n   */\n  @Public()\n  @Post('register')\n  @ApiResponse({ status: 201, description: 'Registration Completed' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async register(@Body() payload: RegisterDto) {\n    const user = await this.usersService.create(payload);\n    return this.authService.createToken(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nJwtStrategy \n\nJwtStrategy \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PassportModule } from '@nestjs/passport';\n\nimport { User, UserSchema } from '../users/user.schema';\nimport { UsersService } from '../users/users.service';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    ConfigModule,\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => {\n        return {\n          secret: configService.get('WEBTOKEN_ENCRYPTION_KEY'),\n          signOptions: {\n            ...(configService.get('WEBTOKEN_EXPIRATION_TIME')\n              ? {\n                  expiresIn: Number(\n                    configService.get('WEBTOKEN_EXPIRATION_TIME')\n                  ),\n                }\n              : {}),\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [AuthService, JwtStrategy, UsersService],\n  exports: [AuthService, JwtStrategy],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/auth/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Authentication Service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                expiration\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createToken\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, usersService: UsersService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/auth/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                jwt service\n\n                                                        \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                users service\n\n                                                        \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    createToken(undefined: User)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/auth/auth.service.ts:41\n                \n            \n\n\n            \n                \n                    Creates a signed jwt token based on User payload\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        token body\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(undefined: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/auth/auth.service.ts:66\n                \n            \n\n\n            \n                \n                    Validates whether or not the user exists in the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        registered user\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        expiration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/auth/auth.service.ts:21\n                        \n                    \n\n            \n                \n                    Time in seconds when the token is to expire\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport * as moment from 'moment';\n\nimport { IJWTResponseBody } from '@starter/api-types';\n\nimport { User } from '../users/user.schema';\nimport { UsersService } from '../users/users.service';\nimport { LoginDto } from './dto/login.dto';\n\n/**\n * Authentication Service\n */\n@Injectable()\nexport class AuthService {\n  /**\n   * Time in seconds when the token is to expire\n   * @type {number}\n   */\n  private readonly expiration: number;\n\n  /**\n   * Constructor\n   * @param {JwtService} jwtService jwt service\n   * @param {UsersService} usersService users service\n   */\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly usersService: UsersService,\n    private readonly configService: ConfigService\n  ) {\n    this.expiration = this.configService.get('WEBTOKEN_EXPIRATION_TIME');\n  }\n\n  /**\n   * Creates a signed jwt token based on User payload\n   * @param {User} param dto to generate token from\n   * @returns {Promise} token body\n   */\n  async createToken({\n    username,\n    name,\n    roles,\n    email,\n  }: User): Promise {\n    return {\n      expiration: this.expiration,\n      expirationFormatted: moment()\n        .add(this.expiration, 'seconds')\n        .format('LLL'),\n      token: this.jwtService.sign({\n        username,\n        name,\n        roles,\n        email,\n      }),\n    };\n  }\n\n  /**\n   * Validates whether or not the user exists in the database\n   * @param {LoginDto} param login payload to authenticate with\n   * @returns {Promise} registered user\n   */\n  async validateUser({ username, password }: LoginDto): Promise {\n    const user = await this.usersService.getByUsernameAndPass(\n      username,\n      password\n    );\n\n    if (!user) {\n      throw new UnauthorizedException(\n        'Could not authenticate. Please try again'\n      );\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CaslFactory.html":{"url":"injectables/CaslFactory.html","title":"injectable - CaslFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CaslFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/casl/casl.factory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createForUser\n                        \n                    \n                \n            \n            \n                \ncreateForUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/casl/casl.factory.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Ability,\n  AbilityBuilder,\n  AbilityClass,\n  ExtractSubjectType,\n  InferSubjects,\n} from '@casl/ability';\nimport { Injectable } from '@nestjs/common';\n\nimport { UserActionsEnum, UserRolesEnum } from '@starter/api-types';\n\nimport { User } from '../users/user.schema';\n\n// Creating CASL subjects to manage. Remark: all is a special keyword in CASL that represents \"any subject\".\ntype Subjects = InferSubjects | 'all';\n\nexport type AppAbility = Ability;\n\n@Injectable()\nexport class CaslFactory {\n  createForUser(user: User) {\n    // Remark: the user is coming from the req.user.\n    const { can, build } = new AbilityBuilder\n    >(Ability as AbilityClass);\n\n    if (user.roles.some((role) => role === UserRolesEnum.SUDO)) {\n      can(UserActionsEnum.Manage, 'all'); // read-write access to everything\n    } else {\n      can(UserActionsEnum.Read, 'all'); // read-only access to everything\n    }\n\n    can(UserActionsEnum.Update, User, { username: user.username }); // update own user\n\n    return build({\n      // Read https://casl.js.org/v5/en/guide/subject-type-detection#use-classes-as-subject-types for details\n      detectSubjectType: (item) =>\n        item.constructor as ExtractSubjectType,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CaslModule.html":{"url":"modules/CaslModule.html","title":"module - CaslModule","body":"\n                   \n\n\n\n\n    Modules\n    CaslModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CaslModule\n\n\n\ncluster_CaslModule_providers\n\n\n\ncluster_CaslModule_exports\n\n\n\n\nCaslFactory \n\nCaslFactory \n\n\n\nCaslModule\n\nCaslModule\n\nCaslFactory  -->\n\nCaslModule->CaslFactory \n\n\n\n\n\nCaslFactory\n\nCaslFactory\n\nCaslModule -->\n\nCaslFactory->CaslModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/casl/casl.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CaslFactory\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CaslFactory\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { CaslFactory } from './casl.factory';\n\n@Module({\n  providers: [CaslFactory],\n  exports: [CaslFactory],\n})\nexport class CaslModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserPolicyHandler.html":{"url":"classes/DeleteUserPolicyHandler.html","title":"class - DeleteUserPolicyHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserPolicyHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/casl/policy-handlers.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IPolicyHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(ability: AppAbility)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/casl/policy-handlers.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ability\n                                    \n                                                AppAbility\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserActionsEnum } from '@starter/api-types';\n\nimport { User } from '../users/user.schema';\nimport { AppAbility } from './casl.factory';\n\ninterface IPolicyHandler {\n  handle(ability: AppAbility): boolean;\n}\n\ntype PolicyHandlerCallback = (ability: AppAbility) => boolean;\n\nexport type PolicyHandler = IPolicyHandler | PolicyHandlerCallback;\n\n// Policy Handlers\n\nexport class DeleteUserPolicyHandler implements IPolicyHandler {\n  handle(ability: AppAbility) {\n    return ability.can(UserActionsEnum.Delete, User);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPolicyHandler.html":{"url":"interfaces/IPolicyHandler.html","title":"interface - IPolicyHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPolicyHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/casl/policy-handlers.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        handle\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(ability: AppAbility)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/casl/policy-handlers.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ability\n                                    \n                                                AppAbility\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UserActionsEnum } from '@starter/api-types';\n\nimport { User } from '../users/user.schema';\nimport { AppAbility } from './casl.factory';\n\ninterface IPolicyHandler {\n  handle(ability: AppAbility): boolean;\n}\n\ntype PolicyHandlerCallback = (ability: AppAbility) => boolean;\n\nexport type PolicyHandler = IPolicyHandler | PolicyHandlerCallback;\n\n// Policy Handlers\n\nexport class DeleteUserPolicyHandler implements IPolicyHandler {\n  handle(ability: AppAbility) {\n    return ability.can(UserActionsEnum.Delete, User);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/auth/jwt-auth.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                JWT Authentication Guard\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/auth/jwt-auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/auth/jwt-auth.guard.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\n\nimport { IS_PUBLIC_KEY } from './public.decorator';\n\n/**\n * JWT Authentication Guard\n */\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/auth/jwt.strategy.ts\n        \n\n\n            \n                Description\n            \n            \n                Jwt Strategy Class\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/auth/jwt.strategy.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(undefined: Record)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/auth/jwt.strategy.ts:35\n                \n            \n\n\n            \n                \n                    Checks if the bearer token is a valid token\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        a object to be signed\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nimport { User } from '../users/user.schema';\nimport { UsersService } from '../users/users.service';\n\n/**\n * Jwt Strategy Class\n */\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  /**\n   * Constructor\n   * @param {ConfigService} configService\n   * @param {ProfileService} usersService\n   */\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly usersService: UsersService\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('WEBTOKEN_ENCRYPTION_KEY'),\n    });\n  }\n\n  /**\n   * Checks if the bearer token is a valid token\n   * @param {Record} jwtPayload validation method for jwt token\n   * @returns {Promise>} a object to be signed\n   */\n  async validate({ iat, exp, id }: Record): Promise {\n    const timeDiff = exp - iat;\n    if (timeDiff \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/auth/dto/login.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Login Dto Class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsNotEmpty()@MinLength(8)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/auth/dto/login.dto.ts:26\n                        \n                    \n\n            \n                \n                    Password field\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsAlphanumeric()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/auth/dto/login.dto.ts:16\n                        \n                    \n\n            \n                \n                    Username field\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsAlphanumeric, IsNotEmpty, MinLength } from 'class-validator';\n\n/**\n * Login Dto Class\n */\nexport class LoginDto {\n  /**\n   * Username field\n   */\n  @ApiProperty({\n    required: true,\n  })\n  @IsAlphanumeric()\n  @IsNotEmpty()\n  username: string;\n\n  /**\n   * Password field\n   */\n  @ApiProperty({\n    required: true,\n  })\n  @IsNotEmpty()\n  @MinLength(8)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchUserDto.html":{"url":"classes/PatchUserDto.html","title":"class - PatchUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/users/dto/patch-user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Patch User Payload Class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/dto/patch-user.dto.ts:20\n                        \n                    \n\n            \n                \n                    Email field\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Matches(/^[a-zA-Z ]+$/)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/dto/patch-user.dto.ts:38\n                        \n                    \n\n            \n                \n                    Name field\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@MinLength(8)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/dto/patch-user.dto.ts:46\n                        \n                    \n\n            \n                \n                    Password field\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsAlphanumeric()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/dto/patch-user.dto.ts:30\n                        \n                    \n\n            \n                \n                    Username field\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsAlphanumeric,\n  IsEmail,\n  IsNotEmpty,\n  Matches,\n  MinLength,\n} from 'class-validator';\n\n/**\n * Patch User Payload Class\n */\nexport class PatchUserDto {\n  /**\n   * Email field\n   */\n  @ApiProperty()\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  /**\n   * Username field\n   */\n  @ApiProperty({\n    required: true,\n  })\n  @IsAlphanumeric()\n  @IsNotEmpty()\n  username: string;\n\n  /**\n   * Name field\n   */\n  @ApiProperty()\n  @Matches(/^[a-zA-Z ]+$/)\n  @IsNotEmpty()\n  name: string;\n\n  /**\n   * Password field\n   */\n  @ApiProperty()\n  @IsNotEmpty()\n  @MinLength(8)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/PoliciesGuard.html":{"url":"guards/PoliciesGuard.html","title":"guard - PoliciesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    PoliciesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                apps/api/src/casl/policies.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                execPolicyHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, CaslFactory: CaslFactory)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/casl/policies.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        CaslFactory\n                                                  \n                                                        \n                                                                        CaslFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/casl/policies.guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        execPolicyHandler\n                        \n                    \n                \n            \n            \n                \n                    \n                    execPolicyHandler(handler: PolicyHandler, ability: AppAbility)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/casl/policies.guard.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                PolicyHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ability\n                                    \n                                                AppAbility\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\n\nimport { AppAbility, CaslFactory } from './casl.factory';\nimport { CHECK_POLICIES_KEY } from './check-policies.decorator';\nimport { PolicyHandler } from './policy-handlers';\n\n@Injectable()\nexport class PoliciesGuard implements CanActivate {\n  constructor(private reflector: Reflector, private CaslFactory: CaslFactory) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const policyHandlers =\n      this.reflector.get(\n        CHECK_POLICIES_KEY,\n        context.getHandler(),\n      ) || [];\n\n    const { user } = context.switchToHttp().getRequest();\n    const ability = this.CaslFactory.createForUser(user);\n\n    return policyHandlers.every((handler) =>\n      this.execPolicyHandler(handler, ability),\n    );\n  }\n\n  private execPolicyHandler(handler: PolicyHandler, ability: AppAbility) {\n    if (typeof handler === 'function') {\n      return handler(ability);\n    }\n    return handler.handle(ability);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/auth/dto/register.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Register Dto Class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/auth/dto/register.dto.ts:22\n                        \n                    \n\n            \n                \n                    Email field\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@Matches(/^[a-zA-Z ]+$/)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/auth/dto/register.dto.ts:42\n                        \n                    \n\n            \n                \n                    Name field\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsNotEmpty()@MinLength(8)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/auth/dto/register.dto.ts:52\n                        \n                    \n\n            \n                \n                    Password field\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsAlphanumeric()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/auth/dto/register.dto.ts:32\n                        \n                    \n\n            \n                \n                    Username field\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsAlphanumeric,\n  IsEmail,\n  IsNotEmpty,\n  Matches,\n  MinLength,\n} from 'class-validator';\n\n/**\n * Register Dto Class\n */\nexport class RegisterDto {\n  /**\n   * Email field\n   */\n  @ApiProperty({\n    required: true,\n  })\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  /**\n   * Username field\n   */\n  @ApiProperty({\n    required: true,\n  })\n  @IsAlphanumeric()\n  @IsNotEmpty()\n  username: string;\n\n  /**\n   * Name field\n   */\n  @ApiProperty({\n    required: true,\n  })\n  @Matches(/^[a-zA-Z ]+$/)\n  @IsNotEmpty()\n  name: string;\n\n  /**\n   * Password field\n   */\n  @ApiProperty({\n    required: true,\n  })\n  @IsNotEmpty()\n  @MinLength(8)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/users/user.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                User Schema Class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                gravatar\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                roles\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/user.schema.ts:28\n                        \n                    \n\n            \n                \n                    Email column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gravatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/user.schema.ts:34\n                        \n                    \n\n            \n                \n                    Gravatar column (gravatar url)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/user.schema.ts:22\n                        \n                    \n\n            \n                \n                    Name column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/user.schema.ts:46\n                        \n                    \n\n            \n                \n                    Password column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRolesEnum[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop(['String'])\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/user.schema.ts:40\n                        \n                    \n\n            \n                \n                    Column to represent a one to many relationship with the roles entity\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/user.schema.ts:16\n                        \n                    \n\n            \n                \n                    Username column\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { UserRolesEnum } from '@starter/api-types';\nimport { Document } from 'mongoose';\n\nexport type UserDocument = User & Document;\n\n/**\n * User Schema Class\n */\n@Schema()\nexport class User {\n  /**\n   * Username column\n   */\n  @Prop()\n  username: string;\n\n  /**\n   * Name column\n   */\n  @Prop()\n  name: string;\n\n  /**\n   * Email column\n   */\n  @Prop()\n  email: string;\n\n  /**\n   * Gravatar column (gravatar url)\n   */\n  @Prop()\n  gravatar: string;\n\n  /**\n   * Column to represent a one to many relationship with the roles entity\n   */\n  @Prop([String])\n  roles: UserRolesEnum[];\n\n  /**\n   * Password column\n   */\n  @Prop()\n  password: string;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/users\n            \n\n\n            \n                Description\n            \n            \n                Users Controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteUserByUsername\n                            \n                            \n                                getUser\n                            \n                            \n                                    Async\n                                getUserByUsername\n                            \n                            \n                                    Async\n                                patchUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUserByUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUserByUsername(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':username')@UseGuards(PoliciesGuard)@CheckPolicies(new DeleteUserPolicyHandler())@ApiResponse({status: 200, description: 'Delete User Request Received'})@ApiResponse({status: 400, description: 'Delete User Request Failed'})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/users/users.controller.ts:85\n                \n            \n\n\n            \n                \n                    Removes a user from the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the username to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        whether or not the user has been deleted\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('user')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/users/users.controller.ts:41\n                \n            \n\n\n            \n                \n                    Retrieves current authenticated user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        queried user data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserByUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByUsername(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':username')@ApiResponse({status: 200, description: 'Fetch User Request Received'})@ApiResponse({status: 400, description: 'Fetch User Request Failed'})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/users/users.controller.ts:53\n                \n            \n\n\n            \n                \n                    Retrieves a particular user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the user given username to fetch\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        queried user data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        patchUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    patchUser(payload: PatchUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@ApiResponse({status: 200, description: 'Patch User Request Received'})@ApiResponse({status: 400, description: 'Patch User Request Failed'})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/users/users.controller.ts:71\n                \n            \n\n\n            \n                \n                    Edit a user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                PatchUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        mutated user data\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Request,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { IGenericMessageBody } from '@starter/api-types';\n\nimport { CheckPolicies } from '../casl/check-policies.decorator';\nimport { PoliciesGuard } from '../casl/policies.guard';\nimport { DeleteUserPolicyHandler } from '../casl/policy-handlers';\nimport { PatchUserDto } from './dto/patch-user.dto';\nimport { User } from './user.schema';\nimport { UsersService } from './users.service';\n\n/**\n * Users Controller\n */\n@ApiBearerAuth()\n@ApiTags('users')\n@Controller('v1/users')\nexport class UsersController {\n  /**\n   * Constructor\n   * @param usersService\n   */\n  constructor(private readonly usersService: UsersService) {}\n\n  /**\n   * Retrieves current authenticated user\n   * @returns {Promise} queried user data\n   */\n  @Get('user')\n  getUser(@Request() req) {\n    return req.user;\n  }\n\n  /**\n   * Retrieves a particular user\n   * @param username the user given username to fetch\n   * @returns {Promise} queried user data\n   */\n  @Get(':username')\n  @ApiResponse({ status: 200, description: 'Fetch User Request Received' })\n  @ApiResponse({ status: 400, description: 'Fetch User Request Failed' })\n  async getUserByUsername(@Param('username') username: string): Promise {\n    const user = await this.usersService.getByUsername(username);\n    if (!user) {\n      throw new BadRequestException(\n        'The user with that username could not be found.'\n      );\n    }\n    return user;\n  }\n\n  /**\n   * Edit a user\n   * @param {RegisterPayload} payload\n   * @returns {Promise} mutated user data\n   */\n  @Patch()\n  @ApiResponse({ status: 200, description: 'Patch User Request Received' })\n  @ApiResponse({ status: 400, description: 'Patch User Request Failed' })\n  async patchUser(@Body() payload: PatchUserDto): Promise {\n    return this.usersService.edit(payload);\n  }\n\n  /**\n   * Removes a user from the database\n   * @param {string} username the username to remove\n   * @returns {Promise} whether or not the user has been deleted\n   */\n  @Delete(':username')\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies(new DeleteUserPolicyHandler())\n  @ApiResponse({ status: 200, description: 'Delete User Request Received' })\n  @ApiResponse({ status: 400, description: 'Delete User Request Failed' })\n  async deleteUserByUsername(\n    @Param('username') username: string\n  ): Promise {\n    return this.usersService.delete(username);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nCaslFactory\n\nCaslFactory\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nCaslFactory->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CaslFactory\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_GUARD } from '@nestjs/core';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { JwtAuthGuard } from '../auth/jwt-auth.guard';\nimport { CaslFactory } from '../casl/casl.factory';\nimport { PoliciesGuard } from '../casl/policies.guard';\nimport { User, UserSchema } from './user.schema';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n  ],\n  providers: [\n    UsersService,\n    {\n      provide: APP_GUARD,\n      useClass: JwtAuthGuard,\n    },\n    PoliciesGuard,\n    CaslFactory,\n  ],\n  controllers: [UsersController],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/users/users.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Users Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                edit\n                            \n                            \n                                get\n                            \n                            \n                                getByUsername\n                            \n                            \n                                getByUsernameAndPass\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/users/users.service.ts:21\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(payload: RegisterDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/users/users.service.ts:69\n                \n            \n\n\n            \n                \n                    Create a user with RegisterPayload fields\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user payload\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        data from the created user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(username: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/users/users.service.ts:116\n                \n            \n\n\n            \n                \n                    Delete user given a username\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        whether or not the delete operation was completed\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        edit\n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(payload: PatchUserDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/users/users.service.ts:97\n                \n            \n\n\n            \n                \n                    Edit user data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                PatchUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        mutated user data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/users/users.service.ts:36\n                \n            \n\n\n            \n                \n                    Fetches user from database by UUID\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        data from queried user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByUsername\n                        \n                    \n                \n            \n            \n                \ngetByUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/users/users.service.ts:45\n                \n            \n\n\n            \n                \n                    Fetches user from database by username\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        data from queried user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByUsernameAndPass\n                        \n                    \n                \n            \n            \n                \ngetByUsernameAndPass(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/users/users.service.ts:55\n                \n            \n\n\n            \n                \n                    Fetches user by username and hashed password\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        data from queried user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotAcceptableException,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport * as crypto from 'crypto';\nimport { url } from 'gravatar';\n\nimport { IGenericMessageBody, UserRolesEnum } from '@starter/api-types';\n\nimport { Model } from 'mongoose';\nimport { RegisterDto } from '../auth/dto/register.dto';\nimport { PatchUserDto } from './dto/patch-user.dto';\nimport { User, UserDocument } from './user.schema';\n\n/**\n * Users Service\n */\n@Injectable()\nexport class UsersService {\n  /**\n   * Constructor\n   * @param {Model} userModel\n   */\n  constructor(\n    @InjectModel(User.name)\n    private readonly userModel: Model\n  ) {}\n\n  /**\n   * Fetches user from database by UUID\n   * @param {number} id\n   * @returns {Promise} data from queried user\n   */\n  get(id: number): Promise {\n    return this.userModel.findById(id).exec();\n  }\n\n  /**\n   * Fetches user from database by username\n   * @param {string} username\n   * @returns {Promise} data from queried user\n   */\n  getByUsername(username: string): Promise {\n    return this.userModel.findOne({ username }).exec();\n  }\n\n  /**\n   * Fetches user by username and hashed password\n   * @param {string} username\n   * @param {string} password\n   * @returns {Promise} data from queried user\n   */\n  getByUsernameAndPass(username: string, password: string): Promise {\n    return this.userModel\n      .findOne({\n        username,\n        password: crypto.createHmac('sha256', password).digest('hex'),\n      })\n      .exec();\n  }\n\n  /**\n   * Create a user with RegisterPayload fields\n   * @param {RegisterDto} payload user payload\n   * @returns {Promise} data from the created user\n   */\n  async create(payload: RegisterDto): Promise {\n    const user = await this.getByUsername(payload.username);\n    if (user) {\n      throw new NotAcceptableException(\n        'The account with the provided username currently exists. Please choose another one.'\n      );\n    }\n    // this will auto assign the admin role to each created user\n    const createdProfile = new this.userModel({\n      ...payload,\n      password: crypto.createHmac('sha256', payload.password).digest('hex'),\n      avatar: url(payload.email, {\n        protocol: 'http',\n        s: '200',\n        r: 'pg',\n        d: '404',\n      }),\n      roles: UserRolesEnum.SUDO,\n    });\n\n    return createdProfile.save();\n  }\n\n  /**\n   * Edit user data\n   * @param {PatchUserDto} payload\n   * @returns {Promise} mutated user data\n   */\n  async edit(payload: PatchUserDto): Promise {\n    const { username } = payload;\n    const updatedProfile = await this.userModel.updateOne(\n      { username },\n      payload\n    );\n    if (updatedProfile.modifiedCount !== 1) {\n      throw new BadRequestException(\n        'The user with that username does not exist in the system. Please try another username.'\n      );\n    }\n    return this.getByUsername(username);\n  }\n\n  /**\n   * Delete user given a username\n   * @param {string} username\n   * @returns {Promise} whether or not the delete operation was completed\n   */\n  async delete(username: string): Promise {\n    return this.userModel.deleteOne({ username }).then((user) => {\n      if (user.deletedCount === 1) {\n        return { message: `Deleted ${username} from records` };\n      } else {\n        throw new BadRequestException(\n          `Failed to delete a user by the name of ${username}.`\n        );\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/api/src/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                apps/api/src/app.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/api/src/auth/auth.controller.test.ts\n            \n            variable\n            moduleMocker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/api/src/auth/auth.service.test.ts\n            \n            variable\n            user\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/auth/auth.service.test.ts\n            \n            variable\n            userRole\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                apps/api/src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/api/src/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                apps/api/src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/api/src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/api/src/auth/public.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/auth/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/casl/casl.factory.ts\n            \n            injectable\n            CaslFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/casl/check-policies.decorator.ts\n            \n            variable\n            CHECK_POLICIES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/casl/check-policies.decorator.ts\n            \n            variable\n            CheckPolicies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/casl/policies.guard.ts\n            \n            guard\n            PoliciesGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/casl/policy-handlers.ts\n            \n            class\n            DeleteUserPolicyHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/casl/policy-handlers.ts\n            \n            interface\n            IPolicyHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/main.ts\n            \n            variable\n            OPEN_API_CURRENT_VERSION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/api/src/main.ts\n            \n            variable\n            OPEN_API_DESCRIPTION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/api/src/main.ts\n            \n            variable\n            OPEN_API_NAME\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/api/src/main.ts\n            \n            variable\n            OPEN_API_ROOT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/api/src/users/dto/patch-user.dto.ts\n            \n            class\n            PatchUserDto\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                apps/api/src/users/user.schema.ts\n            \n            class\n            User\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                apps/api/src/users/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                apps/api/src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                100 %\n                (8/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~14.2.0\n        \n            @angular/common : ~14.2.0\n        \n            @angular/compiler : ~14.2.0\n        \n            @angular/core : ~14.2.0\n        \n            @angular/forms : ~14.2.0\n        \n            @angular/platform-browser : ~14.2.0\n        \n            @angular/platform-browser-dynamic : ~14.2.0\n        \n            @angular/router : ~14.2.0\n        \n            @casl/ability : ^6.0.0\n        \n            @casl/mongoose : ^7.1.0\n        \n            @fastify/helmet : ^10.0.0\n        \n            @fastify/rate-limit : ^7.4.0\n        \n            @fastify/static : ^6.5.0\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/mongoose : ^9.0.0\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-fastify : ^9.0.0\n        \n            @nestjs/serve-static : ^3.0.0\n        \n            @nestjs/swagger : ^6.1.2\n        \n            @nrwl/angular : 14.6.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            gravatar : ^1.8.2\n        \n            joi : ^17.6.2\n        \n            mongoose : ^6.6.2\n        \n            nest-winston : ^1.7.0\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            winston : ^3.8.2\n        \n            winston-daily-rotate-file : ^4.7.1\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAPI Starter\n\n\n  \n\n\nA progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n\n\n    \n    \n    \n    \n    \n\n\nTable of Contents:\n\nDescription\nPrerequisites\nDeployment\nEnvironment Configuration\nChoosing a Web Framework\nHTTP2\nChoosing a Database\nTesting\nTypeDocs\nLogs\n\n🔎 This repo was created with Nx.\n📚 Description\nThis boilerplate is made to quickly prototype backend applications. It comes with authentication/authorization, logging, crud features and database persistence out of the box.\n\n🛠️ Prerequisites\nNon Docker\n\nPlease make sure to have Node.js (16+) locally by downloading the Javascript runtime via brew, choco, or apt-get.\n\nPlease make sure to have MongoDB locally by following the guide on the MongoDB website. MongoDB can be downloaded standalone via brew, choco, or apt-get.\n\n\n\nRemark: MongoDB can be easily deployed on a cloud provider like MongoDB Atlas - comes with a free tier option to get started quickly. This will bypass the requirement to have MongoDB locally.\n\nDocker 🐳\n\nPlease make sure to have Docker Desktop operational to quickly compose the required dependencies. Then follow the docker procedure outlined below.\n\n\n🚀 Deployment\nManual Deployment without Docker\n\nClone the repo via git clone https://github.com/msanvarov/nest-rest-mongo-boilerplate.\n\nDownload dependencies via npm i or yarn.\n\nCreate a .env file via the cp .env.example .env command and replace the existing environment variable placeholders with valid responses.\n\nStart the api in development mode by using npm run start (the app will be exposed on http://localhost:3333; not to conflict with React, Angular, or Vue ports).\n\n\n\nOptional deployment of the UI\n\n\n\nThis repo comes with a UI built with Angular - that can be accessed via http://localhost:4200.\n\nTo start the UI, start a new terminal window and run npm run start --project ui.\n\n\n\nRemark: In the docker deployment, the UI is automatically started and served by the API.\n\n\n\n\n\nRemark: For SQL databases, I created a boilerplate for Nest and TypeORM.\n\nDeploying with Docker 🐳\n\nExecute the following command in-app directory:\n\n# creates and loads the docker container in detached mode with the required configuration\n$ docker-compose up -d\nThe following command will download dependencies and execute the web application on http://localhost:80 (deployed behind a Nginx reverse proxy).\n\n\n🔒 Environment Configuration\nBy default, the application comes with a config module that can read in every environment variable from the .env file.\nAPP_ENV - the application environment to execute as, either in development or production. Determines the type of logging options to utilize. Options: development or production.\nWEBTOKEN_ENCRYPTION_KEY - the key to encrypt/decrypt web tokens with. Make sure to generate a random alphanumeric string for this.\nWEBTOKEN_EXPIRATION_TIME - the time in seconds when the web token will expire; by default, it's 2400 seconds which is 40 mins.\nDB_URL - the connnection string to the MongoDB database.\n\n🏗 Choosing a Web Framework\nThis boilerplate comes with Fastify out of the box as it offers performance benefits over Express. But the Express adapter is still accessible on a different branch.\n\n🦾 HTTP/2\nLuckily, Fastify can enable HTTP2 over either HTTPS (h2) or plaintext (h2c) out of the box. This boilerplate makes use of this on the feat/http2 branch where a self-signed certificate was created for testing this capability. The certificate is located in the certs folder. For production, please use a valid certificate.\nThe self signed certificate can be generated via OpenSSL:\n$ openssl req -x509 -newkey rsa:4096 -keyout api-key.pem -out api-cert.pem -days 365 -nodes\n\nRemark: Express can be ran with HTTP/2 by employing the spdy library.\n\n\n✅ Testing\nDocker 🐳\n# Start the docker container if it's not running\n$ docker start nest-rest-typeorm-api\n\n# unit tests\n$ docker exec -it nest-rest-typeorm-api npm run test\nNon-Docker\n# execute test\n$ npm run test\n💡 TypeDocs\nThe documentation for this boilerplate can be found on Github pages.\nThe docs can be generated on-demand, by typing npm run typedocs:api:start. This will produce a docs/api folder with the required front-end files and start hosting on localhost.\n\nRemark: The docs for the ui are generated on-demand, by typing npm run typedocs:ui:start. This will produce a docs/ui folder with the required front-end files and start hosting on localhost.\n\n# generate docs for api code\n$ npm run typedocs:api:start\n📝 Open API\nOut of the box, the web app comes with Swagger; an open api specification, that is used to describe RESTful APIs. Nest provides a dedicated module to work with it.\nThe configuration for Swagger can be found at this location.\n\n✨ TypeORM\nTypeORM is an object-relational mapping that acts as an abstraction layer over operations on databases. Please view the documentation for further details.\nThe configuration for TypeORM can be found in the app module.\n\n🔊 Logs\nThis boilerplate comes with a Winston module for extensive logging, the configurations for Winston can be found in the app module.\n\n🏗️ Progress\n\n\n\nBranches\nStatus\n\n\n\n\nmain\n✅\n\n\nfeat/*\n🚧\n\n\n\n Remark: This template was employed to create a [Real World example app](https://github.com/gothinkster/realworld) on [Github](). -->\n\n\n👥 Support\nPRs are appreciated, I fully rely on the passion ❤️ of the OS developers.\n\nLicense\nThis starter API is MIT licensed.\nAuthor\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2018 msanvarov\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CaslModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CaslModule\n\n\n\ncluster_CaslModule_exports\n\n\n\ncluster_CaslModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nCaslModule\n\nCaslModule\n\nAppModule -->\n\nCaslModule->AppModule\n\n\n\n\n\nCaslFactory \n\nCaslFactory \n\nCaslFactory  -->\n\nCaslModule->CaslFactory \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nCaslFactory\n\nCaslFactory\n\nCaslModule -->\n\nCaslFactory->CaslModule\n\n\n\nUsersModule -->\n\nCaslFactory->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n        \n            License : MIT\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppAbility   (apps/.../casl.factory.ts)\n                        \n                        \n                            PolicyHandler   (apps/.../policy-handlers.ts)\n                        \n                        \n                            PolicyHandlerCallback   (apps/.../policy-handlers.ts)\n                        \n                        \n                            Subjects   (apps/.../casl.factory.ts)\n                        \n                        \n                            UserDocument   (apps/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/casl/casl.factory.ts\n    \n    \n        \n            \n                \n                    \n                    AppAbility\n                \n            \n            \n                \n                        Ability<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Subjects\n                \n            \n            \n                \n                            InferSubjects<> | \"all\"\n\n                \n            \n        \n    \n    apps/api/src/casl/policy-handlers.ts\n    \n    \n        \n            \n                \n                    \n                    PolicyHandler\n                \n            \n            \n                \n                            IPolicyHandler | PolicyHandlerCallback\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PolicyHandlerCallback\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    apps/api/src/users/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CHECK_POLICIES_KEY   (apps/.../check-policies.decorator.ts)\n                        \n                        \n                            CheckPolicies   (apps/.../check-policies.decorator.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (apps/.../public.decorator.ts)\n                        \n                        \n                            moduleMocker   (apps/.../auth.controller.test.ts)\n                        \n                        \n                            OPEN_API_CURRENT_VERSION   (apps/.../main.ts)\n                        \n                        \n                            OPEN_API_DESCRIPTION   (apps/.../main.ts)\n                        \n                        \n                            OPEN_API_NAME   (apps/.../main.ts)\n                        \n                        \n                            OPEN_API_ROOT   (apps/.../main.ts)\n                        \n                        \n                            Public   (apps/.../public.decorator.ts)\n                        \n                        \n                            user   (apps/.../auth.service.test.ts)\n                        \n                        \n                            userRole   (apps/.../auth.service.test.ts)\n                        \n                        \n                            UserSchema   (apps/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/casl/check-policies.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CHECK_POLICIES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'check_policy'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CheckPolicies\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...handlers: PolicyHandler[]) =>\n  SetMetadata(CHECK_POLICIES_KEY, handlers)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n}\n                    \n                \n\n\n        \n    \n\n    apps/api/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n}\n                    \n                \n\n\n        \n    \n\n    apps/api/src/auth/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/auth/auth.controller.test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        moduleMocker\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ModuleMocker(global)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OPEN_API_CURRENT_VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1.0'\n                    \n                \n\n            \n                \n                    Current version of the api\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OPEN_API_DESCRIPTION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'API Description'\n                    \n                \n\n            \n                \n                    A short description for api\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OPEN_API_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'API'\n                    \n                \n\n            \n                \n                    The name given to the api\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OPEN_API_ROOT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'api/v1/docs'\n                    \n                \n\n            \n                \n                    The endpoint for open api ui\n\n                \n            \n\n        \n    \n\n    apps/api/src/auth/auth.service.test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : plainToClass(User, {\n  id: 1,\n  email: 'test@user.com',\n  roles: [\n    {\n      id: 1,\n      role: UserRolesEnum.SUDO,\n      user: 1,\n    },\n  ],\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userRole\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoles\n\n                    \n                \n                \n                    \n                        Default value : plainToClass(UserRoles, {\n  id: 1,\n  role: UserRolesEnum.SUDO,\n  user,\n} as UserRoles)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/users/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
